// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Hands.Data.HandsDB
{

    // The table 'Curr_User_Ppif_Delme' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // Curr_User_Ppif_Delme
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public partial class CurrUserPpifDelme : Entity
    {
        public double? S35 { get; set; } // S#
        public System.DateTime? DateOfRegistration { get; set; } // Date of Registration
        public double? NwCode { get; set; } // NW Code
        public string NameOfNoorWorker { get; set; } // Name of Noor worker (length: 255)
        public string NameOfVillage { get; set; } // Name of Village (length: 255)
        public string NameOfUc { get; set; } // Name of UC (length: 255)
        public string NameOfTehsil { get; set; } // Name of Tehsil (length: 255)
        public string NameOfMwra { get; set; } // Name of MWRA (length: 255)
        public string NameOfHusband { get; set; } // Name of Husband (length: 255)
        public string Concate { get; set; } // Concate (length: 255)
        public double? MwraId { get; set; } // MwraId
        public string CnicNumber { get; set; } // CNIC Number (length: 255)
        public string ContactNumber { get; set; } // Contact Number (length: 255)
        public double? Education4035OfClassesAttended6101641 { get; set; } // Education (-# of classes attended = 0-16)
        public string Occupation { get; set; } // Occupation (length: 255)
        public double? YearOfBirth { get; set; } // Year of Birth
        public double? Age40InYears41OfMwrAs { get; set; } // Age (in Years) of MWRAs
        public double? DurationOfMarriage { get; set; } // Duration of Marriage
        public string CurrentlyPregnant { get; set; } // Currently Pregnant (length: 255)
        public string IfYes44ThenNo35OfMonths { get; set; } // If Yes, then No# of Months (length: 255)
        public double? No35OfAliveChildren { get; set; } // No# of Alive Children
        public string No35OfAbortions { get; set; } // No# of Abortions (length: 255)
        public string No35OfChildrenDied { get; set; } // No# of Children Died (length: 255)
        public string ReasonOfDeath { get; set; } // Reason of Death (length: 255)
        public string AgeOfYoungestChildIf62540Years41 { get; set; } // Age of youngest  Child if >5 (Years) (length: 255)
        public double? AgeOfYoungestChildIf60540Months41 { get; set; } // Age of youngest Child if     <5 (Months)
        public string HaveYouEverUsedFpMethod { get; set; } // Have you ever used FP method (length: 255)
        public string IfYes44ThenWriteNameOfFpMethod { get; set; } // If Yes, then write name of FP method (length: 255)
        public string SinceHowLongFpNotUsed40Years41 { get; set; } // Since how long FP not used (Years) (length: 255)
        public string ReasonForDiscontinuation { get; set; } // Reason for Discontinuation (length: 255)
        public string IfNo44AnyReason { get; set; } // If no, any reason (length: 255)
        public string DoYouWantToUseYes47No { get; set; } // Do you want to use        Yes / No (length: 255)
        public string IfYesForWhichPurpose161Spacing261Limiting { get; set; } // If yes for which purpose         _1= Spacing_2= Limiting (length: 255)
        public string IsUserFpDb { get; set; } // is_user_fp_DB (length: 255)
        public string ContraceptualDb { get; set; } // contraceptual_DB (length: 255)
        public double? ProductidDb { get; set; } // productid_DB
        public string CrCode { get; set; } // CR Code (length: 255)
        public string DateOfClientGenerationDb { get; set; } // Date of client generation_DB (length: 255)
        public string Interval { get; set; } // Interval (length: 255)
        public string Postpartum { get; set; } // Postpartum (length: 255)
        public string PostAbortion { get; set; } // Post Abortion (length: 255)
        public System.DateTime? Ppfp { get; set; } // PPFP
        public string Pac { get; set; } // PAC (length: 255)
        public string ReferralDb { get; set; } // referral_DB (length: 255)
        public System.DateTime? DateOfStartingDb { get; set; } // date_of_starting_DB
        public string HistoryDb { get; set; } // history_DB (length: 255)
        public System.DateTime? LmpDateDb { get; set; } // lmp_Date_DB
        public string BpDb { get; set; } // BP_DB (length: 255)
        public string WeightDb { get; set; } // weight_DB (length: 255)
        public string JaundiceDb { get; set; } // Jaundice_DB (length: 255)
        public string PallorAnemiaDb { get; set; } // Pallor_anemia_DB (length: 255)
        public string FoulDb { get; set; } // Foul_DB (length: 255)
        public string PainLowerDb { get; set; } // pain_lower_DB (length: 255)
        public double? QuantityDb { get; set; } // Quantity_DB

        public CurrUserPpifDelme()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
