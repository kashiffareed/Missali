// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Hands.Data.HandsDB
{

    // client_checklist
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public partial class ClientChecklist : Entity
    {
        public int ClientChecklistId { get; set; } // client_checklist_id (Primary key)
        public int AppUserId { get; set; } // app_user_id
        public int VisitorId { get; set; } // visitor_id
        public string VisitorName { get; set; } // visitor_name (length: 255)
        public int? MwraId { get; set; } // mwra_id
        public System.DateTime CreatedAt { get; set; } // created_at
        public string GetInformation { get; set; } // get_information (length: 255)
        public string ReceivePrescribed { get; set; } // receive_prescribed (length: 255)
        public string RestartContraceptiveMethod { get; set; } // restart_contraceptive_method (length: 255)
        public string GetSupplier { get; set; } // get_supplier (length: 255)
        public string SwitchContraceptiveMethod { get; set; } // switch_contraceptive_method (length: 255)
        public string DiscussAProblem { get; set; } // discuss_a_problem (length: 255)
        public string OtherNonFamily { get; set; } // other_non_family (length: 255)
        public string NameOfTheMethod { get; set; } // name_of_the_method (length: 255)
        public string DropDownMethodsName { get; set; } // drop_down_methods_name (length: 255)
        public string ReceivedMethodOfChoice { get; set; } // received_method_of_choice (length: 255)
        public string ForTheMethodYouJustAccept { get; set; } // for_the_method_you_just_accept (length: 255)
        public string DidProviderDescribe { get; set; } // did_provider_describe (length: 255)
        public string NameFewOfSideEffects { get; set; } // name_few_of_side_effects (length: 255)
        public string WhatToDoIfProblem { get; set; } // what_to_do_if_problem (length: 255)
        public string WhenFolloupVisit { get; set; } // when_folloup_visit (length: 255)
        public string DidYouFeelComfortable { get; set; } // did_you_feel_comfortable (length: 255)
        public string DidYouFeelInformation { get; set; } // did_you_feel_information (length: 255)
        public string DidYouHaveEnoughPrivacy { get; set; } // did_you_have_enough_privacy (length: 255)
        public string DuringVisitTreated { get; set; } // during_visit_treated (length: 255)
        public string ProviderEncourage { get; set; } // provider_encourage (length: 255)
        public string WhenReceivedMethod { get; set; } // when_received_method (length: 255)
        public string ReceivedMethodOfChoiceSupport { get; set; } // received_method_of_choice_support (length: 255)
        public string ForTheMethodYouJustAcceptSupport { get; set; } // for_the_method_you_just_accept_support (length: 255)
        public string ProviderDescribeSideEffects { get; set; } // provider_describe_side_effects (length: 255)
        public string NameSideEffects { get; set; } // name_side_effects (length: 255)
        public string WhatToDoIfProblemSupport { get; set; } // what_to_do_if_problem_support (length: 255)
        public string ToldWhenToVisit { get; set; } // told_when_to_visit (length: 255)
        public string ExperienceAnySideEffects { get; set; } // experience_any_side_effects (length: 255)
        public string SatisfyByProviderSupport { get; set; } // satisfy_by_provider_support (length: 255)
        public string FeelComfortableToAskQuestions { get; set; } // feel_comfortable_to_ask_questions (length: 255)
        public string EnoughPrivacyDuringExam { get; set; } // enough_privacy_during_exam (length: 255)
        public string TreatedByProvider { get; set; } // treated_by_provider (length: 255)
        public string EncourageAskQuestion { get; set; } // encourage_ask_question (length: 255)
        public string FpNeedSpacing { get; set; } // fp_need_spacing (length: 255)
        public string AdoptingFpMethod { get; set; } // adopting_fp_method (length: 255)
        public string Date { get; set; } // date (length: 20)
        public bool IsActive { get; set; } // IsActive
        public int? ProjectId { get; set; } // ProjectId

        public ClientChecklist()
        {
            CreatedAt = System.DateTime.Now;
            IsActive = true;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
