// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Hands.Data.HandsDB
{

    public interface IHandsDBContext : System.IDisposable
    {
        System.Data.Entity.DbSet<AccessLevel> AccessLevels { get; set; } // AccessLevel
        System.Data.Entity.DbSet<ApiAuthentication> ApiAuthentications { get; set; } // api_authentication
        System.Data.Entity.DbSet<ApiDuplicateRecordLog> ApiDuplicateRecordLogs { get; set; } // Api_Duplicate_Record_Logs
        System.Data.Entity.DbSet<ApiErrorLog> ApiErrorLogs { get; set; } // Api_Error_Log
        System.Data.Entity.DbSet<ApiLog> ApiLogs { get; set; } // Api_logs
        System.Data.Entity.DbSet<AppMenu> AppMenus { get; set; } // AppMenu
        System.Data.Entity.DbSet<AppUser> AppUsers { get; set; } // app_users
        System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; } // AspNetRoles
        System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; } // AspNetUsers
        System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; } // AspNetUserClaims
        System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; } // AspNetUserLogins
        System.Data.Entity.DbSet<AssignMenuToApp> AssignMenuToApps { get; set; } // AssignMenuToApp
        System.Data.Entity.DbSet<AssignMenuToProject> AssignMenuToProjects { get; set; } // AssignMenuToProject
        System.Data.Entity.DbSet<AssignRoleToProject> AssignRoleToProjects { get; set; } // AssignRoleToProject
        System.Data.Entity.DbSet<BlmisCategory> BlmisCategories { get; set; } // BlmisCategory
        System.Data.Entity.DbSet<BlmisSellHistory> BlmisSellHistories { get; set; } // BlmisSellHistory
        System.Data.Entity.DbSet<BlmisUserstock> BlmisUserstocks { get; set; } // Blmis_userstock
        System.Data.Entity.DbSet<Category> Categories { get; set; } // categories
        System.Data.Entity.DbSet<City> Cities { get; set; } // cities
        System.Data.Entity.DbSet<ClientChecklist> ClientChecklists { get; set; } // client_checklist
        System.Data.Entity.DbSet<Content> Contents { get; set; } // content
        System.Data.Entity.DbSet<CurrentMrwa20210923> CurrentMrwa20210923 { get; set; } // CurrentMrwa_20210923
        System.Data.Entity.DbSet<Device> Devices { get; set; } // Devices
        System.Data.Entity.DbSet<InventoryReturn> InventoryReturns { get; set; } // InventoryReturns
        System.Data.Entity.DbSet<LhvChecklist> LhvChecklists { get; set; } // lhv_checklist
        System.Data.Entity.DbSet<Log> Logs { get; set; } // logs
        System.Data.Entity.DbSet<LogsHeader> LogsHeaders { get; set; } // Logs_headers
        System.Data.Entity.DbSet<MarviLhv> MarviLhvs { get; set; } // marvi_lhv
        System.Data.Entity.DbSet<Menu> Menus { get; set; } // Menu
        System.Data.Entity.DbSet<MenuLevelAccess> MenuLevelAccesses { get; set; } // MenuLevelAccess
        System.Data.Entity.DbSet<MultiProjectAppDetail> MultiProjectAppDetails { get; set; } // MultiProjectAppDetails
        System.Data.Entity.DbSet<Mwra> Mwras { get; set; } // mwra
        System.Data.Entity.DbSet<MwraCategory> MwraCategories { get; set; } // mwra_categories
        System.Data.Entity.DbSet<MwraClient> MwraClients { get; set; } // mwra_client
        System.Data.Entity.DbSet<MwraClientMapping> MwraClientMappings { get; set; } // mwra_clientMapping
        System.Data.Entity.DbSet<MwraClientSnapshot102021> MwraClientSnapshot102021 { get; set; } // mwra_client_snapshot_10_2021
        System.Data.Entity.DbSet<NoorChecklist> NoorChecklists { get; set; } // noor_checklist
        System.Data.Entity.DbSet<Pm> Pms { get; set; } // pms
        System.Data.Entity.DbSet<Product> Products { get; set; } // products
        System.Data.Entity.DbSet<Products1> Products1 { get; set; } // products1
        System.Data.Entity.DbSet<ProjectMenuAccess> ProjectMenuAccesses { get; set; } // ProjectMenuAccess
        System.Data.Entity.DbSet<ProjectSolution> ProjectSolutions { get; set; } // ProjectSolution
        System.Data.Entity.DbSet<PushEvent> PushEvents { get; set; } // push_events
        System.Data.Entity.DbSet<PushMessage> PushMessages { get; set; } // push_messages
        System.Data.Entity.DbSet<Region> Regions { get; set; } // regions
        System.Data.Entity.DbSet<RegionsMapping> RegionsMappings { get; set; } // regionsMapping
        System.Data.Entity.DbSet<Role> Roles { get; set; } // roles
        System.Data.Entity.DbSet<RoleMenuAccess> RoleMenuAccesses { get; set; } // RoleMenuAccess
        System.Data.Entity.DbSet<RoleMenuAccessLevelRight> RoleMenuAccessLevelRights { get; set; } // RoleMenuAccessLevelRights
        System.Data.Entity.DbSet<Session> Sessions { get; set; } // session
        System.Data.Entity.DbSet<SessionContent> SessionContents { get; set; } // SessionContent
        System.Data.Entity.DbSet<SessionFollowup> SessionFollowups { get; set; } // session_followup
        System.Data.Entity.DbSet<SessionInventory> SessionInventories { get; set; } // SessionInventory
        System.Data.Entity.DbSet<SessionMwra> SessionMwras { get; set; } // session_mwras
        System.Data.Entity.DbSet<Stock> Stocks { get; set; } // stocks
        System.Data.Entity.DbSet<Taluqa> Taluqas { get; set; } // taluqa
        System.Data.Entity.DbSet<TempLog> TempLogs { get; set; } // tempLogs
        System.Data.Entity.DbSet<TempMwra> TempMwras { get; set; } // temp_mwra
        System.Data.Entity.DbSet<TestingTable> TestingTables { get; set; } // testingTable
        System.Data.Entity.DbSet<UnionCouncil> UnionCouncils { get; set; } // union_council
        System.Data.Entity.DbSet<User> Users { get; set; } // users
        System.Data.Entity.DbSet<UserMenuAccess> UserMenuAccesses { get; set; } // UserMenuAccess
        System.Data.Entity.DbSet<UsersStock> UsersStocks { get; set; } // users_stock
        System.Data.Entity.DbSet<UserType> UserTypes { get; set; } // UserType

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        System.Collections.Generic.List<AccessMenubyRoleIdReturnModel> AccessMenubyRoleId(int? roleId, int? projectId);
        System.Collections.Generic.List<AccessMenubyRoleIdReturnModel> AccessMenubyRoleId(int? roleId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<AccessMenubyRoleIdReturnModel>> AccessMenubyRoleIdAsync(int? roleId, int? projectId);

        System.Collections.Generic.List<ClmisInventoryStatusReturnModel> ClmisInventoryStatus(int? projectId);
        System.Collections.Generic.List<ClmisInventoryStatusReturnModel> ClmisInventoryStatus(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClmisInventoryStatusReturnModel>> ClmisInventoryStatusAsync(int? projectId);

        System.Collections.Generic.List<ClmisTotalMwraReturnModel> ClmisTotalMwra(int? projectId);
        System.Collections.Generic.List<ClmisTotalMwraReturnModel> ClmisTotalMwra(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClmisTotalMwraReturnModel>> ClmisTotalMwraAsync(int? projectId);

        System.Collections.Generic.List<GetAllContentReturnModel> GetAllContent(int? projectId);
        System.Collections.Generic.List<GetAllContentReturnModel> GetAllContent(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllContentReturnModel>> GetAllContentAsync(int? projectId);

        System.Collections.Generic.List<GetAllContentPmsReturnModel> GetAllContentPms(int? projectId);
        System.Collections.Generic.List<GetAllContentPmsReturnModel> GetAllContentPms(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllContentPmsReturnModel>> GetAllContentPmsAsync(int? projectId);

        System.Collections.Generic.List<GetAllLogwithMarviReturnModel> GetAllLogwithMarvi();
        System.Collections.Generic.List<GetAllLogwithMarviReturnModel> GetAllLogwithMarvi(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllLogwithMarviReturnModel>> GetAllLogwithMarviAsync();

        System.Collections.Generic.List<GetAllLogwithNameReturnModel> GetAllLogwithName(int? projectId);
        System.Collections.Generic.List<GetAllLogwithNameReturnModel> GetAllLogwithName(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllLogwithNameReturnModel>> GetAllLogwithNameAsync(int? projectId);

        System.Collections.Generic.List<GetAllMiscellenousReturnModel> GetAllMiscellenous();
        System.Collections.Generic.List<GetAllMiscellenousReturnModel> GetAllMiscellenous(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllMiscellenousReturnModel>> GetAllMiscellenousAsync();

        System.Collections.Generic.List<GetAllMwraClientWithRelationNamesReturnModel> GetAllMwraClientWithRelationNames();
        System.Collections.Generic.List<GetAllMwraClientWithRelationNamesReturnModel> GetAllMwraClientWithRelationNames(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllMwraClientWithRelationNamesReturnModel>> GetAllMwraClientWithRelationNamesAsync();

        System.Collections.Generic.List<GetAllMwrAsByAppUserIdReturnModel> GetAllMwrAsByAppUserId(int? appUserId);
        System.Collections.Generic.List<GetAllMwrAsByAppUserIdReturnModel> GetAllMwrAsByAppUserId(int? appUserId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllMwrAsByAppUserIdReturnModel>> GetAllMwrAsByAppUserIdAsync(int? appUserId);

        System.Collections.Generic.List<GetAllMwraWithAllRelationsReturnModel> GetAllMwraWithAllRelations();
        System.Collections.Generic.List<GetAllMwraWithAllRelationsReturnModel> GetAllMwraWithAllRelations(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllMwraWithAllRelationsReturnModel>> GetAllMwraWithAllRelationsAsync();

        System.Collections.Generic.List<GetAllMwraWithRelationNamesReturnModel> GetAllMwraWithRelationNames(int? projectId, int? lhvId, int? marviId);
        System.Collections.Generic.List<GetAllMwraWithRelationNamesReturnModel> GetAllMwraWithRelationNames(int? projectId, int? lhvId, int? marviId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllMwraWithRelationNamesReturnModel>> GetAllMwraWithRelationNamesAsync(int? projectId, int? lhvId, int? marviId);

        System.Collections.Generic.List<GetAllProductsReturnModel> GetAllProducts();
        System.Collections.Generic.List<GetAllProductsReturnModel> GetAllProducts(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllProductsReturnModel>> GetAllProductsAsync();

        System.Collections.Generic.List<GetAllSessionDataReturnModel> GetAllSessionData(int? appUserId, System.DateTime? startDate);
        System.Collections.Generic.List<GetAllSessionDataReturnModel> GetAllSessionData(int? appUserId, System.DateTime? startDate, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllSessionDataReturnModel>> GetAllSessionDataAsync(int? appUserId, System.DateTime? startDate);

        System.Collections.Generic.List<GetAllSessionDataOldReturnModel> GetAllSessionDataOld();
        System.Collections.Generic.List<GetAllSessionDataOldReturnModel> GetAllSessionDataOld(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAllSessionDataOldReturnModel>> GetAllSessionDataOldAsync();

        System.Collections.Generic.List<GetAppUserByIdReturnModel> GetAppUserById(int? appuserId, int? projectId);
        System.Collections.Generic.List<GetAppUserByIdReturnModel> GetAppUserById(int? appuserId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetAppUserByIdReturnModel>> GetAppUserByIdAsync(int? appuserId, int? projectId);

        System.Collections.Generic.List<GetBlmisSalesByMonthReturnModel> GetBlmisSalesByMonth(string startDate, int? projectId);
        System.Collections.Generic.List<GetBlmisSalesByMonthReturnModel> GetBlmisSalesByMonth(string startDate, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetBlmisSalesByMonthReturnModel>> GetBlmisSalesByMonthAsync(string startDate, int? projectId);

        GetClientlistReturnModel GetClientlist(int? regionId, int? projectId);
        System.Threading.Tasks.Task<GetClientlistReturnModel> GetClientlistAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<GetCurrentUserForEachLhvByRegionIdReturnModel> GetCurrentUserForEachLhvByRegionId(int? regionId, int? projectId);
        System.Collections.Generic.List<GetCurrentUserForEachLhvByRegionIdReturnModel> GetCurrentUserForEachLhvByRegionId(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetCurrentUserForEachLhvByRegionIdReturnModel>> GetCurrentUserForEachLhvByRegionIdAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<GetDashboardcountReturnModel> GetDashboardcount(int? projectId);
        System.Collections.Generic.List<GetDashboardcountReturnModel> GetDashboardcount(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetDashboardcountReturnModel>> GetDashboardcountAsync(int? projectId);

        System.Collections.Generic.List<GetfollowupByNamesReturnModel> GetfollowupByNames(int? projectId);
        System.Collections.Generic.List<GetfollowupByNamesReturnModel> GetfollowupByNames(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetfollowupByNamesReturnModel>> GetfollowupByNamesAsync(int? projectId);

        System.Collections.Generic.List<GetfollowupByNamesByLhvIdReturnModel> GetfollowupByNamesByLhvId(int? lhvId, int? projectId);
        System.Collections.Generic.List<GetfollowupByNamesByLhvIdReturnModel> GetfollowupByNamesByLhvId(int? lhvId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetfollowupByNamesByLhvIdReturnModel>> GetfollowupByNamesByLhvIdAsync(int? lhvId, int? projectId);

        System.Collections.Generic.List<GetFutureSessionDataReturnModel> GetFutureSessionData(int? appUserId, System.DateTime? startDate, int? projectId);
        System.Collections.Generic.List<GetFutureSessionDataReturnModel> GetFutureSessionData(int? appUserId, System.DateTime? startDate, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetFutureSessionDataReturnModel>> GetFutureSessionDataAsync(int? appUserId, System.DateTime? startDate, int? projectId);

        System.Collections.Generic.List<GetlhvMavraCountByRegionIdReturnModel> GetlhvMavraCountByRegionId(int? regionId, int? projectId);
        System.Collections.Generic.List<GetlhvMavraCountByRegionIdReturnModel> GetlhvMavraCountByRegionId(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetlhvMavraCountByRegionIdReturnModel>> GetlhvMavraCountByRegionIdAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<GetMwraByIdWithNamesReturnModel> GetMwraByIdWithNames(int? mwraId);
        System.Collections.Generic.List<GetMwraByIdWithNamesReturnModel> GetMwraByIdWithNames(int? mwraId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetMwraByIdWithNamesReturnModel>> GetMwraByIdWithNamesAsync(int? mwraId);

        System.Collections.Generic.List<GetMwraClienNametByMwraIdReturnModel> GetMwraClienNametByMwraId(int? mwraId);
        System.Collections.Generic.List<GetMwraClienNametByMwraIdReturnModel> GetMwraClienNametByMwraId(int? mwraId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetMwraClienNametByMwraIdReturnModel>> GetMwraClienNametByMwraIdAsync(int? mwraId);

        System.Collections.Generic.List<GetMwraClienWithNameReturnModel> GetMwraClienWithName(int? appUserId, int? projectId);
        System.Collections.Generic.List<GetMwraClienWithNameReturnModel> GetMwraClienWithName(int? appUserId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetMwraClienWithNameReturnModel>> GetMwraClienWithNameAsync(int? appUserId, int? projectId);

        System.Collections.Generic.List<GetMwraNamesBySessionIdReturnModel> GetMwraNamesBySessionId(int? sessionId);
        System.Collections.Generic.List<GetMwraNamesBySessionIdReturnModel> GetMwraNamesBySessionId(int? sessionId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetMwraNamesBySessionIdReturnModel>> GetMwraNamesBySessionIdAsync(int? sessionId);

        System.Collections.Generic.List<GetMwraSessionReturnModel> GetMwraSession(int? projectId);
        System.Collections.Generic.List<GetMwraSessionReturnModel> GetMwraSession(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetMwraSessionReturnModel>> GetMwraSessionAsync(int? projectId);

        System.Collections.Generic.List<GetNoorClientCheckListingReturnModel> GetNoorClientCheckListing(int? noorChecklistId);
        System.Collections.Generic.List<GetNoorClientCheckListingReturnModel> GetNoorClientCheckListing(int? noorChecklistId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetNoorClientCheckListingReturnModel>> GetNoorClientCheckListingAsync(int? noorChecklistId);

        int GetPortalUsers();
        // GetPortalUsersAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<GetProductByUserIdReturnModel> GetProductByUserId(int? userId, int? projectId, int? regionId);
        System.Collections.Generic.List<GetProductByUserIdReturnModel> GetProductByUserId(int? userId, int? projectId, int? regionId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetProductByUserIdReturnModel>> GetProductByUserIdAsync(int? userId, int? projectId, int? regionId);

        System.Collections.Generic.List<GetProductListReturnModel> GetProductList();
        System.Collections.Generic.List<GetProductListReturnModel> GetProductList(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetProductListReturnModel>> GetProductListAsync();

        System.Collections.Generic.List<GetQuantityByUserIdAndProductIdReturnModel> GetQuantityByUserIdAndProductId(int? userId, int? productId);
        System.Collections.Generic.List<GetQuantityByUserIdAndProductIdReturnModel> GetQuantityByUserIdAndProductId(int? userId, int? productId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetQuantityByUserIdAndProductIdReturnModel>> GetQuantityByUserIdAndProductIdAsync(int? userId, int? productId);

        GetRealtimeChecklistReturnModel GetRealtimeChecklist(int? visitorId, int? regionId, int? projectId);
        System.Threading.Tasks.Task<GetRealtimeChecklistReturnModel> GetRealtimeChecklistAsync(int? visitorId, int? regionId, int? projectId);

        System.Collections.Generic.List<GetRoleByProjectReturnModel> GetRoleByProject(int? projectId);
        System.Collections.Generic.List<GetRoleByProjectReturnModel> GetRoleByProject(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetRoleByProjectReturnModel>> GetRoleByProjectAsync(int? projectId);

        System.Collections.Generic.List<GetSessionCallListReturnModel> GetSessionCallList(int? projectId);
        System.Collections.Generic.List<GetSessionCallListReturnModel> GetSessionCallList(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetSessionCallListReturnModel>> GetSessionCallListAsync(int? projectId);

        System.Collections.Generic.List<GetSessionCallmarviListReturnModel> GetSessionCallmarviList(int? projectId);
        System.Collections.Generic.List<GetSessionCallmarviListReturnModel> GetSessionCallmarviList(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetSessionCallmarviListReturnModel>> GetSessionCallmarviListAsync(int? projectId);

        System.Collections.Generic.List<GetSheduleActivityListReturnModel> GetSheduleActivityList(int? projectId);
        System.Collections.Generic.List<GetSheduleActivityListReturnModel> GetSheduleActivityList(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetSheduleActivityListReturnModel>> GetSheduleActivityListAsync(int? projectId);

        System.Collections.Generic.List<GetStockQuantityReturnModel> GetStockQuantity(int? productId);
        System.Collections.Generic.List<GetStockQuantityReturnModel> GetStockQuantity(int? productId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetStockQuantityReturnModel>> GetStockQuantityAsync(int? productId);

        System.Collections.Generic.List<GetUsersByUserTypeReturnModel> GetUsersByUserType(string userType, int? projectId);
        System.Collections.Generic.List<GetUsersByUserTypeReturnModel> GetUsersByUserType(string userType, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<GetUsersByUserTypeReturnModel>> GetUsersByUserTypeAsync(string userType, int? projectId);

        System.Collections.Generic.List<HcpListingWithNamesReturnModel> HcpListingWithNames(string userType, int? projectId);
        System.Collections.Generic.List<HcpListingWithNamesReturnModel> HcpListingWithNames(string userType, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<HcpListingWithNamesReturnModel>> HcpListingWithNamesAsync(string userType, int? projectId);

        System.Collections.Generic.List<MarviClientGenerationReportReturnModel> MarviClientGenerationReport(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);
        System.Collections.Generic.List<MarviClientGenerationReportReturnModel> MarviClientGenerationReport(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<MarviClientGenerationReportReturnModel>> MarviClientGenerationReportAsync(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);

        System.Collections.Generic.List<MwraForEachLhvByRegionIdReturnModel> MwraForEachLhvByRegionId(int? regionId, int? projectId);
        System.Collections.Generic.List<MwraForEachLhvByRegionIdReturnModel> MwraForEachLhvByRegionId(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<MwraForEachLhvByRegionIdReturnModel>> MwraForEachLhvByRegionIdAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<NewUserCurrentMonthReturnModel> NewUserCurrentMonth(int? projectId);
        System.Collections.Generic.List<NewUserCurrentMonthReturnModel> NewUserCurrentMonth(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<NewUserCurrentMonthReturnModel>> NewUserCurrentMonthAsync(int? projectId);

        System.Collections.Generic.List<NewUserCurrentMonthByRegionIdReturnModel> NewUserCurrentMonthByRegionId(int? regionId, int? projectId);
        System.Collections.Generic.List<NewUserCurrentMonthByRegionIdReturnModel> NewUserCurrentMonthByRegionId(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<NewUserCurrentMonthByRegionIdReturnModel>> NewUserCurrentMonthByRegionIdAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<NewUserEachLhvByRegionIdReturnModel> NewUserEachLhvByRegionId(int? regionId, int? projectId);
        System.Collections.Generic.List<NewUserEachLhvByRegionIdReturnModel> NewUserEachLhvByRegionId(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<NewUserEachLhvByRegionIdReturnModel>> NewUserEachLhvByRegionIdAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<NoorCheckListReturnModel> NoorCheckList(int? projectId);
        System.Collections.Generic.List<NoorCheckListReturnModel> NoorCheckList(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<NoorCheckListReturnModel>> NoorCheckListAsync(int? projectId);

        System.Collections.Generic.List<SpAliveChildReturnModel> SpAliveChild(int? projectId, System.DateTime? startDate, System.DateTime? endDate);
        System.Collections.Generic.List<SpAliveChildReturnModel> SpAliveChild(int? projectId, System.DateTime? startDate, System.DateTime? endDate, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpAliveChildReturnModel>> SpAliveChildAsync(int? projectId, System.DateTime? startDate, System.DateTime? endDate);

        System.Collections.Generic.List<SpAssignRoleToProjectReturnModel> SpAssignRoleToProject();
        System.Collections.Generic.List<SpAssignRoleToProjectReturnModel> SpAssignRoleToProject(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpAssignRoleToProjectReturnModel>> SpAssignRoleToProjectAsync();

        System.Collections.Generic.List<SpBlmisInventoryReturnModel> SpBlmisInventory(int? projectId);
        System.Collections.Generic.List<SpBlmisInventoryReturnModel> SpBlmisInventory(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpBlmisInventoryReturnModel>> SpBlmisInventoryAsync(int? projectId);

        System.Collections.Generic.List<SpBlmisSellsReturnModel> SpBlmisSells(int? projectId, int? marviId);
        System.Collections.Generic.List<SpBlmisSellsReturnModel> SpBlmisSells(int? projectId, int? marviId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpBlmisSellsReturnModel>> SpBlmisSellsAsync(int? projectId, int? marviId);

        System.Collections.Generic.List<SpBlmisUserStockReturnModel> SpBlmisUserStock(int? projectId, int? marviId);
        System.Collections.Generic.List<SpBlmisUserStockReturnModel> SpBlmisUserStock(int? projectId, int? marviId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpBlmisUserStockReturnModel>> SpBlmisUserStockAsync(int? projectId, int? marviId);

        System.Collections.Generic.List<SpClientCheckListReturnModel> SpClientCheckList(int? projectId);
        System.Collections.Generic.List<SpClientCheckListReturnModel> SpClientCheckList(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpClientCheckListReturnModel>> SpClientCheckListAsync(int? projectId);

        System.Collections.Generic.List<SpClmisHandStockReturnModel> SpClmisHandStock(int? projectId);
        System.Collections.Generic.List<SpClmisHandStockReturnModel> SpClmisHandStock(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpClmisHandStockReturnModel>> SpClmisHandStockAsync(int? projectId);

        System.Collections.Generic.List<SpClmisInventoryReturnModel> SpClmisInventory(int? projectId);
        System.Collections.Generic.List<SpClmisInventoryReturnModel> SpClmisInventory(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpClmisInventoryReturnModel>> SpClmisInventoryAsync(int? projectId);

        int SpClmisLhvDetail();
        // SpClmisLhvDetailAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int SpClmisLhvDetails();
        // SpClmisLhvDetailsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<SpContentcmsReturnModel> SpContentcms(int? projectId);
        System.Collections.Generic.List<SpContentcmsReturnModel> SpContentcms(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpContentcmsReturnModel>> SpContentcmsAsync(int? projectId);

        System.Collections.Generic.List<SpContentpmsReturnModel> SpContentpms(int? projectId);
        System.Collections.Generic.List<SpContentpmsReturnModel> SpContentpms(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpContentpmsReturnModel>> SpContentpmsAsync(int? projectId);

        System.Collections.Generic.List<SpContinuedUserClientListingReturnModel> SpContinuedUserClientListing(int? mwraclientId, int? projectId);
        System.Collections.Generic.List<SpContinuedUserClientListingReturnModel> SpContinuedUserClientListing(int? mwraclientId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpContinuedUserClientListingReturnModel>> SpContinuedUserClientListingAsync(int? mwraclientId, int? projectId);

        System.Collections.Generic.List<SpContinuedUserClientListingCsvReturnModel> SpContinuedUserClientListingCsv(int? projectId);
        System.Collections.Generic.List<SpContinuedUserClientListingCsvReturnModel> SpContinuedUserClientListingCsv(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpContinuedUserClientListingCsvReturnModel>> SpContinuedUserClientListingCsvAsync(int? projectId);

        System.Collections.Generic.List<SpCurrentUserMethodWiseReturnModel> SpCurrentUserMethodWise(int? projectId);
        System.Collections.Generic.List<SpCurrentUserMethodWiseReturnModel> SpCurrentUserMethodWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpCurrentUserMethodWiseReturnModel>> SpCurrentUserMethodWiseAsync(int? projectId);

        System.Collections.Generic.List<SpDetailMcprReturnModel> SpDetailMcpr(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);
        System.Collections.Generic.List<SpDetailMcprReturnModel> SpDetailMcpr(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpDetailMcprReturnModel>> SpDetailMcprAsync(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);

        System.Collections.Generic.List<SpFpUsersTaluqaTehsilwiseReturnModel> SpFpUsersTaluqaTehsilwise(System.DateTime? startDate, System.DateTime? endDate, int? projectId);
        System.Collections.Generic.List<SpFpUsersTaluqaTehsilwiseReturnModel> SpFpUsersTaluqaTehsilwise(System.DateTime? startDate, System.DateTime? endDate, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpFpUsersTaluqaTehsilwiseReturnModel>> SpFpUsersTaluqaTehsilwiseAsync(System.DateTime? startDate, System.DateTime? endDate, int? projectId);

        System.Collections.Generic.List<SpGetAllInventoryByUserIdReturnModel> SpGetAllInventoryByUserId(int? projectId, int? userId);
        System.Collections.Generic.List<SpGetAllInventoryByUserIdReturnModel> SpGetAllInventoryByUserId(int? projectId, int? userId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetAllInventoryByUserIdReturnModel>> SpGetAllInventoryByUserIdAsync(int? projectId, int? userId);

        System.Collections.Generic.List<SpGetAllMarviWithNamesReturnModel> SpGetAllMarviWithNames(int? projectId);
        System.Collections.Generic.List<SpGetAllMarviWithNamesReturnModel> SpGetAllMarviWithNames(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetAllMarviWithNamesReturnModel>> SpGetAllMarviWithNamesAsync(int? projectId);

        System.Collections.Generic.List<SpGetAppBibProductsWithCategoriesReturnModel> SpGetAppBibProductsWithCategories(int? projectId);
        System.Collections.Generic.List<SpGetAppBibProductsWithCategoriesReturnModel> SpGetAppBibProductsWithCategories(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetAppBibProductsWithCategoriesReturnModel>> SpGetAppBibProductsWithCategoriesAsync(int? projectId);

        System.Collections.Generic.List<SpGetGeoLocationReturnModel> SpGetGeoLocation();
        System.Collections.Generic.List<SpGetGeoLocationReturnModel> SpGetGeoLocation(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetGeoLocationReturnModel>> SpGetGeoLocationAsync();

        System.Collections.Generic.List<SpGetMwraByLhvIdwithmwraCountReturnModel> SpGetMwraByLhvIdwithmwraCount(int? lhvId, int? projectId);
        System.Collections.Generic.List<SpGetMwraByLhvIdwithmwraCountReturnModel> SpGetMwraByLhvIdwithmwraCount(int? lhvId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetMwraByLhvIdwithmwraCountReturnModel>> SpGetMwraByLhvIdwithmwraCountAsync(int? lhvId, int? projectId);

        System.Collections.Generic.List<SpGetProjectDetailsReturnModel> SpGetProjectDetails();
        System.Collections.Generic.List<SpGetProjectDetailsReturnModel> SpGetProjectDetails(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetProjectDetailsReturnModel>> SpGetProjectDetailsAsync();

        System.Collections.Generic.List<SpGetRolesByProjectIdReturnModel> SpGetRolesByProjectId(int? projectId);
        System.Collections.Generic.List<SpGetRolesByProjectIdReturnModel> SpGetRolesByProjectId(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpGetRolesByProjectIdReturnModel>> SpGetRolesByProjectIdAsync(int? projectId);

        System.Collections.Generic.List<SpInventoryReturnReturnModel> SpInventoryReturn(int? projectId);
        System.Collections.Generic.List<SpInventoryReturnReturnModel> SpInventoryReturn(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpInventoryReturnReturnModel>> SpInventoryReturnAsync(int? projectId);

        System.Collections.Generic.List<SpLhvCheckListReturnModel> SpLhvCheckList(int? projectId);
        System.Collections.Generic.List<SpLhvCheckListReturnModel> SpLhvCheckList(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLhvCheckListReturnModel>> SpLhvCheckListAsync(int? projectId);

        System.Collections.Generic.List<SpLhvDetailsReturnModel> SpLhvDetails(int? regionId, int? projectId);
        System.Collections.Generic.List<SpLhvDetailsReturnModel> SpLhvDetails(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLhvDetailsReturnModel>> SpLhvDetailsAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<SpLiveProgressForVisitInCommunityDaysWiseReturnModel> SpLiveProgressForVisitInCommunityDaysWise(int? projectId);
        System.Collections.Generic.List<SpLiveProgressForVisitInCommunityDaysWiseReturnModel> SpLiveProgressForVisitInCommunityDaysWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLiveProgressForVisitInCommunityDaysWiseReturnModel>> SpLiveProgressForVisitInCommunityDaysWiseAsync(int? projectId);

        System.Collections.Generic.List<SpLiveProgressForVisitInCommunityMonthsWiseReturnModel> SpLiveProgressForVisitInCommunityMonthsWise(int? projectId);
        System.Collections.Generic.List<SpLiveProgressForVisitInCommunityMonthsWiseReturnModel> SpLiveProgressForVisitInCommunityMonthsWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLiveProgressForVisitInCommunityMonthsWiseReturnModel>> SpLiveProgressForVisitInCommunityMonthsWiseAsync(int? projectId);

        System.Collections.Generic.List<SpLiveProgressForVisitInCommunityYearsWiseReturnModel> SpLiveProgressForVisitInCommunityYearsWise(int? projectId);
        System.Collections.Generic.List<SpLiveProgressForVisitInCommunityYearsWiseReturnModel> SpLiveProgressForVisitInCommunityYearsWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLiveProgressForVisitInCommunityYearsWiseReturnModel>> SpLiveProgressForVisitInCommunityYearsWiseAsync(int? projectId);

        System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityDaysWiseReturnModel> SpLiveProgressForVisitMarviInCommunityDaysWise(int? projectId);
        System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityDaysWiseReturnModel> SpLiveProgressForVisitMarviInCommunityDaysWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityDaysWiseReturnModel>> SpLiveProgressForVisitMarviInCommunityDaysWiseAsync(int? projectId);

        System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityMonthsWiseReturnModel> SpLiveProgressForVisitMarviInCommunityMonthsWise(int? projectId);
        System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityMonthsWiseReturnModel> SpLiveProgressForVisitMarviInCommunityMonthsWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityMonthsWiseReturnModel>> SpLiveProgressForVisitMarviInCommunityMonthsWiseAsync(int? projectId);

        System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityYearsWiseReturnModel> SpLiveProgressForVisitMarviInCommunityYearsWise(int? projectId);
        System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityYearsWiseReturnModel> SpLiveProgressForVisitMarviInCommunityYearsWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpLiveProgressForVisitMarviInCommunityYearsWiseReturnModel>> SpLiveProgressForVisitMarviInCommunityYearsWiseAsync(int? projectId);

        System.Collections.Generic.List<SpMcprTaluqaWiseReturnModel> SpMcprTaluqaWise(int? projectId);
        System.Collections.Generic.List<SpMcprTaluqaWiseReturnModel> SpMcprTaluqaWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMcprTaluqaWiseReturnModel>> SpMcprTaluqaWiseAsync(int? projectId);

        System.Collections.Generic.List<SpMissedSessionDateReturnModel> SpMissedSessionDate();
        System.Collections.Generic.List<SpMissedSessionDateReturnModel> SpMissedSessionDate(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMissedSessionDateReturnModel>> SpMissedSessionDateAsync();

        System.Collections.Generic.List<SpMissedSessionsWithMwraNamesReturnModel> SpMissedSessionsWithMwraNames(int? projectId);
        System.Collections.Generic.List<SpMissedSessionsWithMwraNamesReturnModel> SpMissedSessionsWithMwraNames(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMissedSessionsWithMwraNamesReturnModel>> SpMissedSessionsWithMwraNamesAsync(int? projectId);

        System.Collections.Generic.List<SpMultiProjectAppDetailsReturnModel> SpMultiProjectAppDetails(int? projectId);
        System.Collections.Generic.List<SpMultiProjectAppDetailsReturnModel> SpMultiProjectAppDetails(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMultiProjectAppDetailsReturnModel>> SpMultiProjectAppDetailsAsync(int? projectId);

        System.Collections.Generic.List<SpMwraClientListingCsvReturnModel> SpMwraClientListingCsv(int? projectId);
        System.Collections.Generic.List<SpMwraClientListingCsvReturnModel> SpMwraClientListingCsv(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwraClientListingCsvReturnModel>> SpMwraClientListingCsvAsync(int? projectId);

        System.Collections.Generic.List<SpMwraClientListingNewReturnModel> SpMwraClientListingNew(int? mwraclientId, int? projectId);
        System.Collections.Generic.List<SpMwraClientListingNewReturnModel> SpMwraClientListingNew(int? mwraclientId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwraClientListingNewReturnModel>> SpMwraClientListingNewAsync(int? mwraclientId, int? projectId);

        SpmwraClientListingtestReturnModel SpmwraClientListingtest(int? mwraclientId);
        System.Threading.Tasks.Task<SpmwraClientListingtestReturnModel> SpmwraClientListingtestAsync(int? mwraclientId);

        System.Collections.Generic.List<SpMwraDropOutClientListingReturnModel> SpMwraDropOutClientListing(int? mwraclientId, int? projectId);
        System.Collections.Generic.List<SpMwraDropOutClientListingReturnModel> SpMwraDropOutClientListing(int? mwraclientId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwraDropOutClientListingReturnModel>> SpMwraDropOutClientListingAsync(int? mwraclientId, int? projectId);

        System.Collections.Generic.List<SpMwrasAgeWiseReportReturnModel> SpMwrasAgeWiseReport(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);
        System.Collections.Generic.List<SpMwrasAgeWiseReportReturnModel> SpMwrasAgeWiseReport(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwrasAgeWiseReportReturnModel>> SpMwrasAgeWiseReportAsync(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);

        System.Collections.Generic.List<SpMwrasClientListingReturnModel> SpMwrasClientListing();
        System.Collections.Generic.List<SpMwrasClientListingReturnModel> SpMwrasClientListing(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwrasClientListingReturnModel>> SpMwrasClientListingAsync();

        System.Collections.Generic.List<SpMwrasClientListingtestingpurpostReturnModel> SpMwrasClientListingtestingpurpost(int? mwraclientId);
        System.Collections.Generic.List<SpMwrasClientListingtestingpurpostReturnModel> SpMwrasClientListingtestingpurpost(int? mwraclientId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwrasClientListingtestingpurpostReturnModel>> SpMwrasClientListingtestingpurpostAsync(int? mwraclientId);

        System.Collections.Generic.List<SpMwrasListingReturnModel> SpMwrasListing(int? projectId);
        System.Collections.Generic.List<SpMwrasListingReturnModel> SpMwrasListing(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwrasListingReturnModel>> SpMwrasListingAsync(int? projectId);

        System.Collections.Generic.List<SpMwraWithMwraclientReturnModel> SpMwraWithMwraclient(int? appUserId);
        System.Collections.Generic.List<SpMwraWithMwraclientReturnModel> SpMwraWithMwraclient(int? appUserId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpMwraWithMwraclientReturnModel>> SpMwraWithMwraclientAsync(int? appUserId);

        System.Collections.Generic.List<SpNewUserClientListingReturnModel> SpNewUserClientListing(int? mwraclientId, int? projectId);
        System.Collections.Generic.List<SpNewUserClientListingReturnModel> SpNewUserClientListing(int? mwraclientId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpNewUserClientListingReturnModel>> SpNewUserClientListingAsync(int? mwraclientId, int? projectId);

        System.Collections.Generic.List<SpNewUserClientListingCsvReturnModel> SpNewUserClientListingCsv(int? projectId);
        System.Collections.Generic.List<SpNewUserClientListingCsvReturnModel> SpNewUserClientListingCsv(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpNewUserClientListingCsvReturnModel>> SpNewUserClientListingCsvAsync(int? projectId);

        System.Collections.Generic.List<SpNewUserMethodWiseReturnModel> SpNewUserMethodWise(int? projectId);
        System.Collections.Generic.List<SpNewUserMethodWiseReturnModel> SpNewUserMethodWise(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpNewUserMethodWiseReturnModel>> SpNewUserMethodWiseAsync(int? projectId);

        System.Collections.Generic.List<SpNewUserMethodWiseByRegionIdReturnModel> SpNewUserMethodWiseByRegionId(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);
        System.Collections.Generic.List<SpNewUserMethodWiseByRegionIdReturnModel> SpNewUserMethodWiseByRegionId(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpNewUserMethodWiseByRegionIdReturnModel>> SpNewUserMethodWiseByRegionIdAsync(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);

        System.Collections.Generic.List<SpNoorCheckListReturnModel> SpNoorCheckList();
        System.Collections.Generic.List<SpNoorCheckListReturnModel> SpNoorCheckList(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpNoorCheckListReturnModel>> SpNoorCheckListAsync();

        System.Collections.Generic.List<SpPmsAnalticswithCountReturnModel> SpPmsAnalticswithCount(int? projectId);
        System.Collections.Generic.List<SpPmsAnalticswithCountReturnModel> SpPmsAnalticswithCount(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpPmsAnalticswithCountReturnModel>> SpPmsAnalticswithCountAsync(int? projectId);

        System.Collections.Generic.List<SppregnantWomanReturnModel> SppregnantWoman();
        System.Collections.Generic.List<SppregnantWomanReturnModel> SppregnantWoman(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SppregnantWomanReturnModel>> SppregnantWomanAsync();

        System.Collections.Generic.List<SpRoleMenuAccessReturnModel> SpRoleMenuAccess();
        System.Collections.Generic.List<SpRoleMenuAccessReturnModel> SpRoleMenuAccess(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpRoleMenuAccessReturnModel>> SpRoleMenuAccessAsync();

        System.Collections.Generic.List<SpsessionContentReturnModel> SpsessionContent(int? sessionId);
        System.Collections.Generic.List<SpsessionContentReturnModel> SpsessionContent(int? sessionId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpsessionContentReturnModel>> SpsessionContentAsync(int? sessionId);

        System.Collections.Generic.List<SPsessionInventoryReturnModel> SPsessionInventory(int? sessionId);
        System.Collections.Generic.List<SPsessionInventoryReturnModel> SPsessionInventory(int? sessionId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SPsessionInventoryReturnModel>> SPsessionInventoryAsync(int? sessionId);

        System.Collections.Generic.List<SPsessionmwraReturnModel> SPsessionmwra(int? sessionid);
        System.Collections.Generic.List<SPsessionmwraReturnModel> SPsessionmwra(int? sessionid, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SPsessionmwraReturnModel>> SPsessionmwraAsync(int? sessionid);

        System.Collections.Generic.List<SpStockListReturnModel> SpStockList();
        System.Collections.Generic.List<SpStockListReturnModel> SpStockList(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpStockListReturnModel>> SpStockListAsync();

        System.Collections.Generic.List<SpTargetPopuplationReturnModel> SpTargetPopuplation(int? regionId, int? projectId);
        System.Collections.Generic.List<SpTargetPopuplationReturnModel> SpTargetPopuplation(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTargetPopuplationReturnModel>> SpTargetPopuplationAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<SpTestCurrentUserReturnModel> SpTestCurrentUser(int? projectId);
        System.Collections.Generic.List<SpTestCurrentUserReturnModel> SpTestCurrentUser(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestCurrentUserReturnModel>> SpTestCurrentUserAsync(int? projectId);

        System.Collections.Generic.List<SpTestCurrentUserMethodWiseReturnModel> SpTestCurrentUserMethodWise();
        System.Collections.Generic.List<SpTestCurrentUserMethodWiseReturnModel> SpTestCurrentUserMethodWise(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestCurrentUserMethodWiseReturnModel>> SpTestCurrentUserMethodWiseAsync();

        System.Collections.Generic.List<SpTestDetailsOfShiftedClientsReturnModel> SpTestDetailsOfShiftedClients(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);
        System.Collections.Generic.List<SpTestDetailsOfShiftedClientsReturnModel> SpTestDetailsOfShiftedClients(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestDetailsOfShiftedClientsReturnModel>> SpTestDetailsOfShiftedClientsAsync(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);

        System.Collections.Generic.List<SpTestFpUsersTaluqaTehsilWiseReturnModel> SpTestFpUsersTaluqaTehsilWise();
        System.Collections.Generic.List<SpTestFpUsersTaluqaTehsilWiseReturnModel> SpTestFpUsersTaluqaTehsilWise(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestFpUsersTaluqaTehsilWiseReturnModel>> SpTestFpUsersTaluqaTehsilWiseAsync();

        System.Collections.Generic.List<SpTestInterventionAreaReturnModel> SpTestInterventionArea(int? regionId, int? projectId);
        System.Collections.Generic.List<SpTestInterventionAreaReturnModel> SpTestInterventionArea(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestInterventionAreaReturnModel>> SpTestInterventionAreaAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<SpTestNewUserMethodWiseReturnModel> SpTestNewUserMethodWise();
        System.Collections.Generic.List<SpTestNewUserMethodWiseReturnModel> SpTestNewUserMethodWise(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestNewUserMethodWiseReturnModel>> SpTestNewUserMethodWiseAsync();

        System.Collections.Generic.List<SpTestTargetPopuplationReturnModel> SpTestTargetPopuplation();
        System.Collections.Generic.List<SpTestTargetPopuplationReturnModel> SpTestTargetPopuplation(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestTargetPopuplationReturnModel>> SpTestTargetPopuplationAsync();

        System.Collections.Generic.List<SpTestUnmetNeedInMwrasReturnModel> SpTestUnmetNeedInMwras(int? projectId);
        System.Collections.Generic.List<SpTestUnmetNeedInMwrasReturnModel> SpTestUnmetNeedInMwras(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTestUnmetNeedInMwrasReturnModel>> SpTestUnmetNeedInMwrasAsync(int? projectId);

        System.Collections.Generic.List<SpTotalClmisHandStockReturnModel> SpTotalClmisHandStock(int? projectId);
        System.Collections.Generic.List<SpTotalClmisHandStockReturnModel> SpTotalClmisHandStock(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTotalClmisHandStockReturnModel>> SpTotalClmisHandStockAsync(int? projectId);

        System.Collections.Generic.List<SpTotalClmisStocksReturnModel> SpTotalClmisStocks(int? projectId, int? regionid);
        System.Collections.Generic.List<SpTotalClmisStocksReturnModel> SpTotalClmisStocks(int? projectId, int? regionid, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTotalClmisStocksReturnModel>> SpTotalClmisStocksAsync(int? projectId, int? regionid);

        System.Collections.Generic.List<SpTrendAmongCurrentUsersReturnModel> SpTrendAmongCurrentUsers(int? regionId, int? projectId);
        System.Collections.Generic.List<SpTrendAmongCurrentUsersReturnModel> SpTrendAmongCurrentUsers(int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTrendAmongCurrentUsersReturnModel>> SpTrendAmongCurrentUsersAsync(int? regionId, int? projectId);

        System.Collections.Generic.List<SpTrendAmongNewUsersReturnModel> SpTrendAmongNewUsers(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);
        System.Collections.Generic.List<SpTrendAmongNewUsersReturnModel> SpTrendAmongNewUsers(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpTrendAmongNewUsersReturnModel>> SpTrendAmongNewUsersAsync(System.DateTime? startDate, System.DateTime? endDate, int? regionId, int? projectId);

        System.Collections.Generic.List<SpUsersReturnModel> SpUsers(int? projectId);
        System.Collections.Generic.List<SpUsersReturnModel> SpUsers(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SpUsersReturnModel>> SpUsersAsync(int? projectId);

        System.Collections.Generic.List<TaluqaListingDataReturnModel> TaluqaListingData(int? projectId);
        System.Collections.Generic.List<TaluqaListingDataReturnModel> TaluqaListingData(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<TaluqaListingDataReturnModel>> TaluqaListingDataAsync(int? projectId);

        System.Collections.Generic.List<TestCurrentUserForEachLhvReturnModel> TestCurrentUserForEachLhv();
        System.Collections.Generic.List<TestCurrentUserForEachLhvReturnModel> TestCurrentUserForEachLhv(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestCurrentUserForEachLhvReturnModel>> TestCurrentUserForEachLhvAsync();

        System.Collections.Generic.List<TestMwraForEachLhvReturnModel> TestMwraForEachLhv();
        System.Collections.Generic.List<TestMwraForEachLhvReturnModel> TestMwraForEachLhv(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestMwraForEachLhvReturnModel>> TestMwraForEachLhvAsync();

        System.Collections.Generic.List<TestProcedureReturnModel> TestProcedure();
        System.Collections.Generic.List<TestProcedureReturnModel> TestProcedure(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestProcedureReturnModel>> TestProcedureAsync();

        System.Collections.Generic.List<TestTotalMcprTaluqaWiseReturnModel> TestTotalMcprTaluqaWise();
        System.Collections.Generic.List<TestTotalMcprTaluqaWiseReturnModel> TestTotalMcprTaluqaWise(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestTotalMcprTaluqaWiseReturnModel>> TestTotalMcprTaluqaWiseAsync();

        System.Collections.Generic.List<TestTotalMwraStatusWiseReturnModel> TestTotalMwraStatusWise();
        System.Collections.Generic.List<TestTotalMwraStatusWiseReturnModel> TestTotalMwraStatusWise(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestTotalMwraStatusWiseReturnModel>> TestTotalMwraStatusWiseAsync();

        System.Collections.Generic.List<UnionCouncilListingDataReturnModel> UnionCouncilListingData(int? projectId);
        System.Collections.Generic.List<UnionCouncilListingDataReturnModel> UnionCouncilListingData(int? projectId, out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<UnionCouncilListingDataReturnModel>> UnionCouncilListingDataAsync(int? projectId);

    }

}
// </auto-generated>
