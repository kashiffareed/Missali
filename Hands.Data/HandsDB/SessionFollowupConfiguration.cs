// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Hands.Data.HandsDB
{

    // session_followup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public partial class SessionFollowupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SessionFollowup>
    {
        public SessionFollowupConfiguration()
            : this("dbo")
        {
        }

        public SessionFollowupConfiguration(string schema)
        {
            ToTable("session_followup", schema);
            HasKey(x => x.SessionFollowupId);

            Property(x => x.SessionFollowupId).HasColumnName(@"session_followup_id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Foul).HasColumnName(@"foul").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Advise).HasColumnName(@"advise").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PainLower).HasColumnName(@"pain_lower").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Danger).HasColumnName(@"danger").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Weight).HasColumnName(@"weight").HasColumnType("int").IsOptional();
            Property(x => x.LmpDate).HasColumnName(@"lmp_date").HasColumnType("date").IsOptional();
            Property(x => x.Complication).HasColumnName(@"complication").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Bp).HasColumnName(@"bp").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Jaundice).HasColumnName(@"jaundice").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.HistoryIrregular).HasColumnName(@"history_irregular").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.PolarAnemia).HasColumnName(@"polar_anemia").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.SessionId).HasColumnName(@"session_id").HasColumnType("int").IsRequired();
            Property(x => x.LhvId).HasColumnName(@"lhv_id").HasColumnType("int").IsRequired();
            Property(x => x.MarviId).HasColumnName(@"marvi_id").HasColumnType("int").IsRequired();
            Property(x => x.MwraId).HasColumnName(@"mwra_id").HasColumnType("int").IsRequired();
            Property(x => x.Referral).HasColumnName(@"referral").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Occasional).HasColumnName(@"occasional").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsOptional();
            Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("int").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType("datetime2").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.ProjectId).HasColumnName(@"ProjectId").HasColumnType("int").IsOptional();
            Property(x => x.DateOfFollowup).HasColumnName(@"date_of_followup").HasColumnType("datetime2").IsOptional();
            Property(x => x.DeviceCreatedDate).HasColumnName(@"DeviceCreatedDate").HasColumnType("datetime2").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
