// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.8
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Hands.Data.HandsDB
{

    // RoleMenuAccess
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public partial class RoleMenuAccess : Entity
    {
        public int Id { get; set; } // Id (Primary key)
        public int RoleId { get; set; } // RoleId
        public int MenuId { get; set; } // MenuId
        public bool IsActive { get; set; } // IsActive
        public short AccessLevelId { get; set; } // AccessLevelId
        public int? ProjectId { get; set; } // ProjectId

        // Foreign keys

        /// <summary>
        /// Parent AccessLevel pointed by [RoleMenuAccess].([AccessLevelId]) (FK_RoleMenuAccess_AccessLevel)
        /// </summary>
        public virtual AccessLevel AccessLevel { get; set; } // FK_RoleMenuAccess_AccessLevel

        /// <summary>
        /// Parent Menu pointed by [RoleMenuAccess].([MenuId]) (FK_RoleMenuAccess_Menu)
        /// </summary>
        public virtual Menu Menu { get; set; } // FK_RoleMenuAccess_Menu

        /// <summary>
        /// Parent Role pointed by [RoleMenuAccess].([RoleId]) (FK_RoleMenuAccess_roles)
        /// </summary>
        public virtual Role Role { get; set; } // FK_RoleMenuAccess_roles

        public RoleMenuAccess()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
