@using Hands.Common.Common
@model Hands.ViewModels.Models.Miscellenou.Miscellenou

@{
    ViewBag.Title = "Add Miscellenou";
}

<script type="text/javascript">

    var right =
        '@(HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.view.ToInt() && x.MenuId == CommonConstant.MenuList.ClmisReturnManagement.ToInt()))';

    if (right === 'False') {
        window.location.href = '@Url.Action("Index","Default")';
    }
</script>

<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
    }

    .m-footer {
        display: none
    }

    .titlehead {
        font-size: 22px;
        color: #676767;
        padding-top: 12px;
    }
</style>

<div id="TargeDiv">
    <div class="m-content">
        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <div class="" style="    padding: 6px;">
                    @using (Ajax.BeginForm("Create", "Miscellenous",
new AjaxOptions
{
LoadingElementId = "resultLoadingDiv",
InsertionMode = InsertionMode.Replace,
OnBegin = "ShowProcessingMsg",
OnComplete = "HideProcessingMsg",
OnSuccess = "success",
UpdateTargetId = "TargeDiv"

},
new { @id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.ProjectId)
                        <div class="form-horizontal" style="    padding-left: 14px;">
                            <h4 class="titlehead">Add Miscellenous Management</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                   
                        @{
                            var RegionSelectList = Model.RegionList.Select(r => new SelectListItem { Text = r.RegionName, Value = r.RegionsId.ToString() }).ToList();
                        }
                        <div class="form-group">
                            <label class="control-label col-md-2">Region</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(f => f.RegionId, RegionSelectList, "Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            <div class="form-group">
                                @Html.Label("User Type", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">

                                    @Html.DropDownListFor(x => x.UserType, new List<SelectListItem>
                                                                                                                                                            {
                                                                                                                                                                new SelectListItem{ Text="Select", Value = "Select" },
                                                                                                                                                                new SelectListItem{ Text="LHV", Value = "lhv" },
                                                                                                                                                                new SelectListItem{ Text="HCP", Value = "hcp" },
                                                                                                                                                            }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group" id="UserDropdown" style="display: none">
                                <label id="typedrilleddown" class="control-label col-md-2">TYPE</label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.UserId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group" style="display: none" id="productName">
                                @Html.Label("Product Name", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.ProductId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group" style="display: none" id="Quatity">
                                <label class="control-label col-md-12">Product current Quantity</label>
                                <div class="col-md-6">
                                    <strong id="Qty"></strong>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                                </div>
                                <label id="errorlabel" class="text-danger"></label>
                            </div>

                            <div class="form-group" style="display: none" id="returnType">
                                @Html.Label("Return Type", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">

                                    @Html.DropDownListFor(x => x.ReturnType, new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="Select", Value = "Select" },
                                        new SelectListItem{ Text="Return To Hands", Value = "1" },
                                        new SelectListItem{ Text="Miscellenous", Value = "2" },
                                    }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ReturnType, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
                                    <input type="submit" id="savebtn" value="Save" class="edit-button btn btn-primary top-button" />
                                    <a href="~/Miscellenou/index?class=m-scroll-top"><span class="fa fa-arrow-circle-o-left col-md-offset-2" style="font-size: 36px;    float: right;"></span></a>
                                </div>
                            </div>
                            <div id="resultLoadingDiv" hidden class="popup">
                                <img src="~/Content/Images/abc.gif" />
                                @*<img taluqaId="image" src="~/Content/Images/ajax-loader.gif"/>*@
                            </div>
                        </div>
                    }


                </div>

            </div>
            <!--end::Portlet-->
        </div>
    </div>
</div>

<script type="text/javascript">

    function ShowProcessingMsg() {
        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }
    function success() {
        swal("Successful!", "Your record has been successfully saved!", "success");
    }

    $("#Quantity").blur(function () {
        var Quantity = $('#Quantity').val();
        var RemainingQty = $('#Qty').text();
        if (parseInt(Quantity) > parseInt(RemainingQty)) {
            $('#errorlabel').text('Quantity value cannot be grater than' + ' ' + RemainingQty);
            $('#savebtn').attr('disabled', "disabled");
        } else {
            $('#errorlabel').text('');
            $('#savebtn').removeAttr('disabled', "disabled");
        }

    });





    $("#UserType").change(function () {
        debugger;
        $('#UserDropdown').slideUp();
        $('#Quatity').slideUp();
        $('#productName').slideUp();
        $('#returnType').slideUp();
        $('#ProductId').empty();
        var id = $("#UserType").val();
        var regId = $('#RegionId').val();
        var value = id;
        if (value != "Select") {
            $("#UserId").empty();
            //$("#ProductId").empty();
            $("#Qty").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetUsersByUserType")', // we are calling json method

                dataType: 'json',

                data: { usertype: value, userId: 0, Regionid: regId },
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function (User) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var items = '<option>Select</option>';
                    $.each(User,
                        function (i, User) {

                            items += "<option value='" + User.Value + "'>" + User.Text + "</option>";

                        });
                    $('#typedrilleddown').text(value.toUpperCase());
                    $('#UserId').html(items);
                    $('#UserDropdown').slideDown();
                },
                error: function(ex) {
                    var items = '<option>Select</option>';
                    $('#UserId').html(items);
                    $('#UserDropdown').slideUp();
                }
            });

        } else {

            $('#UserDropdown').slideUp();
            var items = '<option>Select</option>';
            $('#productName').slideUp();
            $('#returnType').slideUp();
            $('#UserId').html(items);
            $('#ProductId').html(items);
            $("#Qty").empty();
        }
    });


    $("#UserId").change(function() {
        debugger
        var value = $("#UserId").val();
        var regId = $('#RegionId').val();
        if (value != "Select") {
            $("#ProductId").empty();
            $("#Qty").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetProductByUserId")', // we are calling json method

                dataType: 'json',

                data: { UserId: value, ProductId: 0, RegionId: regId},
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function(Product) {
                    debugger;
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var items = '<option>Select</option>';
                    $.each(Product,
                        function (i, Product) {
                            debugger;
                            items += "<option value='" + Product.Value + "'>" + Product.Text + "</option>";
                            //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                            //    Taluqa.Text + '</option>');
                            // here we are adding option for States

                        });
                    $('#ProductId').html(items);
                    $('#productName').slideDown();

                },
                error: function(ex) {

                    $('#productName').slideUp();
                    $('#returnType').slideUp();
                }
            });
            return false;
        } else {
            var items = '<option>Select</option>';
            $('#productName').slideUp();
            $('#returnType').slideUp();
            $('#Quatity').slideUp();
            $("#Qty").empty();

        }

    });


    $("#ProductId").change(function() {
        debugger;

        var value = $("#ProductId").val();;
        var value1 = $("#UserId").val();
        var regId = $('#RegionId').val();

        if (value != "Select" && value1 != "Select") {

            $("#Qty").empty();
            $.ajax({

                type: 'POST',
                url: '@Url.Action("GetProductQuantity")', // we are calling json method

                dataType: 'json',

                data: { ProductId: value, UserId: value1,RegionId:regId },
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function(ProductClmisReturnList) {
                    debugger;
                    $('#Qty').text(ProductClmisReturnList[0].RemainingQuantity);
                    $('#Quatity').slideDown();
                    $('#returnType').slideDown();
                },
                error: function(ex) {

                    var items = '<option>Select</option>';
                    $('#UserId').html(items);
                    $('#UserDropdown').slideUp();
                }
            });
        } else {

            $('#Quatity').slideUp();
            $("#Qty").empty();
            $('#returnType').slideUp();
        }

    });


</script>
