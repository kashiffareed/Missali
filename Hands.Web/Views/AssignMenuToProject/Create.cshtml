@model Hands.ViewModels.Models.AssignMenuToProject.AssignMenuToProjectViewModel
@{
    ViewBag.Title = "Assign Menu to Projects";

}

<noscript>
    <link rel="stylesheet" href="~/jQuery-File-Upload-9.11.2/css/jquery.fileupload-noscript.css">
</noscript>
<noscript>
    <link rel="stylesheet" href="~/jQuery-File-Upload-9.11.2/css/jquery.fileupload-ui-noscript.css">
</noscript>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />




<script type="text/javascript">
    var dd ;
    $(

        function() {


            $('#jstree_demo_div') // listen for event
                .on('changed.jstree', function (e, data) {
                    debugger;
                    var i, j, r = [];
                    for (i = 0, j = data.selected.length; i < j; i++) {

                        
                        r.push(data.instance.get_node(data.selected[i]).id);
                    }
                    dd = "";
                    //$('#Id').val(r.join(', '));
                    //$('#jstree_demo_div').html('Selected: ' + r.join(', '));
                    dd=r;

                })
                .jstree({ 'core' : {
                        'data' :  @Html.Action("MenuCategoryHierarchy")
                    }, "checkbox": {
                        "whole_node" :true,
                        "keep_selected_style": true,
                        "cascade": "down",
                        "three_state": true,
                        "two_state": false
                    },
                    "plugins": ["checkbox"]

                });

        }
    );
    @*$("#submit").click(function() {


        var data = dd;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Indexx")', // we are calling json method
            dataType: 'json',
            data: { test: data }

        });

    });*@

</script>

@using (Html.BeginForm("Create", "AssignMenuToProject", FormMethod.Post, new { id = "multiprojectModel" }))
{
    //var ProjectSelectListItems = Model.ProjectList.Select(r => new SelectListItem { Text = r.Name, Value = r.Id.ToString() }).ToList();
    <div class="form-group">
        @Html.Label("Project Name", new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.ProjectName, new { @class = "form-control validation" })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
        <label id="errorlabel" class="text-danger"></label>
    </div>
    <div id="jstree_demo_div"></div>
    <div class="form-group">
        @Html.Label("Role Name", new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.RoleName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Email", new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control validation" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <label id="errorlabel1" class="text-danger"></label>
    </div>
    <div class="form-group">
        @Html.Label("Password", new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
            <input type="button" id="submit" value="Save" class="edit-button btn btn-primary top-button" />
        </div>

    </div>
}

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
}









<script type="text/javascript">

  




    $("#submit").on('click',
        function () {
            debugger;
            //var values =  dd ; //
            //var theIds = JSON.stringify(values);
            var values = $('#jstree_demo_div').jstree("get_selected", true);
            var theIds = JSON.stringify(values);
            var RoleId = $('#RoleId').val();
            var ProjectID = $('#ProjectId').val();
           

            /*  if (RoleId != "" && ProjectID != "") */
            if ($('#multiprojectModel').valid())
            {

                var ProjectName = $('#ProjectName').val();
                var RoleName = $('#RoleName').val();
                var UserName = $('#Email').val();
                var PasswordName = $('#Password').val();
              
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("create")', // the method we are calling

                    data: { data1: theIds, ProjectName: ProjectName, RoleName: RoleName, Email: UserName, Password: PasswordName},
                    success: function (result) {
                        window.location.assign("/AssignMenuToProject/Index");
                    },
                    error: function (result) {
                        alert('something went wrong');
                    }
                });
            }

        });


    // $("#ProjectId").change(function () {
    //    var id = $(this).val();
    //    GetRoles(id);
    //});

    @*function GetRoles(id) {
        var value = id;
        if (value != "Select") {
            $("#RoleId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetRoles")', // we are calling json method

                    dataType: 'json',

                    data: { projectId: $("#ProjectId").val(), RoleId:0 },
                    // here we are get value of selected country and passing same value as inputto json method GetStates.


                    success: function(Role) {

                        // states contains the JSON formatted list
                        // of states passed from the controller
                        var items = '<option value="">Select</option>';
                        $.each(Role,
                            function (i, Role) {
                                debugger
                                items += "<option value='" + Role.Value + "'>" + Role.Text + "</option>";
                                //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                                //    Taluqa.Text + '</option>');
                                // here we are adding option for States

                            });
                        $('#RoleId').html(items);
                        $('#UserDropdown').slideDown();
                    },
                    error: function(ex) {
                        var items = '<option value="">Select</option>';
                        $('#RoleId').html(items);
                        $('#UserDropdown').slideUp();
                    }
                });
        } else {

            $('#UserDropdown').slideUp();
        }
     }*@

    $(".validation").change(function () {

        var projectname = $("#ProjectName").val();
        var email = $("#Email").val();

        if (projectname != "") {
            assignProjectName(projectname);
        }
        if (email != "") {
            assignEmail(email);
        }

    });
    function assignProjectName(projectname) {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("assignProjectName")', // we are calling json method

            dataType: 'json',

            data: { projectName: projectname },
            // here we are get value of selected country and passing same value as inputto json method GetStates.

            success: function (value) {
                if (value ==  true) {
                    $('#errorlabel').text('Project Name is already in used');
                    $('#submit').attr('disabled', "disabled");
                }
                else {
                    $('#errorlabel').text('');
                    $('#submit').removeAttr('disabled', "disabled");
                }
            },
            error: function(ex) {
                $('#submit').attr('disabled', "disabled");
            }
        });
    }

    function assignEmail(email) {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("assignEmail")', // we are calling json method

            dataType: 'json',

            data: { Email: email },
            // here we are get value of selected country and passing same value as inputto json method GetStates.

            success: function (value) {
                if (value ==  true) {
                    $('#errorlabel1').text('Email is already in used');
                    $('#submit').attr('disabled', "disabled");
                }
                else {
                    $('#errorlabel1').text('');
                    $('#submit').removeAttr('disabled', "disabled");
                }
            },
            error: function(ex) {
                $('#submit').attr('disabled', "disabled");
            }
        });
    }
</script>


