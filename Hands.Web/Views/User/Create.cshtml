@using Hands.Common.Common
@model Hands.ViewModels.Models.user

@{
    ViewBag.Title = "Create";
}


<script type="text/javascript">

    var right =
        '@(HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.view.ToInt() && x.MenuId == CommonConstant.MenuList.User.ToInt()))';

    if (right === 'False') {
        window.location.href = '@Url.Action("Index","Default")';
    }
</script>


<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
    }

    .m-footer {
        display: none
    }

    .titlehead {
        font-size: 22px;
        color: #676767;
        padding-top: 12px;
    }
</style>

<div id="TargeDiv">
    <div class="m-content">
        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <div class="" style="    padding: 6px;">
                    @using (Ajax.BeginForm("Create", "User",
                        new AjaxOptions
                        {
                            LoadingElementId = "resultLoadingDiv",
                            InsertionMode = InsertionMode.ReplaceWith,
                            OnBegin = "ShowProcessingMsg",
                            OnComplete = "HideProcessingMsg",
                            OnSuccess = "success",
                            UpdateTargetId = "TargeDiv"

                        },
                        new { @id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal" style="    padding-left: 14px;">
                            <h4 class="titlehead">Create User</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @*<div class="form-group">
                                    <label class="control-label col-md-2">Full Name</label>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                <label class="control-label col-md-2">User Name</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control validation" })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <label id="errorlabel" class="text-danger"></label>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Login E-Mail</label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control validation" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                <label id="errorlabel1" class="text-danger"></label>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Password</label>
                                <div class="col-md-6">
                                    @Html.PasswordFor(model => model.Pwd, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            @*@{
                                    var ProjectSelectListItems = Model.Project.Select(r => new SelectListItem { Text = r.Name, Value = r.Id.ToString() }).ToList();
                                }
                                <div class="form-group">
                                    <label class="control-label col-md-2">Project Name</label>
                                    <div class="col-md-6">
                                        @Html.DropDownListFor(model => model.ProjectId, ProjectSelectListItems, "Select", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            @*<div class="form-group" id="UserDropdown" style="display: none">
                                    <div class="form-group">
                                        <label class="control-label col-md-2">Role Name</label>
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(model => model.RoleId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>*@
                            @{
                                var RoleSelectListItems = Model.Role.Select(r => new SelectListItem { Text = r.role_name, Value = r.role_id.ToString() }).ToList();
                            }
                            <div class="form-group">
                                <label class="control-label col-md-2">Role Name</label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.RoleId, RoleSelectListItems, "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Designation", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
                                    <input type="submit" id="savebtn" value="Save" class="edit-button btn btn-primary top-button" />
                                    <a href="~/User/Index?class=m-scroll-top"><span class="fa fa-arrow-circle-o-left col-md-offset-2" style="font-size: 36px;    float: right;"></span></a>
                                </div>

                            </div>

                            <div id="resultLoadingDiv" hidden class="popup">
                                <img src="~/Content/Images/abc.gif" />
                                @*<img taluqaId="image" src="~/Content/Images/ajax-loader.gif"/>*@
                            </div>
                        </div>
                    }


                </div>

            </div>
            <!--end::Portlet-->
        </div>




    </div>


</div>

<script type="text/javascript">

    function ShowProcessingMsg() {
        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }
    function successEdit() {
        swal("Successful!", "Your record has been successfully saved!", "success");
    }


    @*$("#ProjectId").change(function () {
        var id = $(this).val();
        GetRoles(id);
    });

    function GetRoles(id) {
        var value = id;
        if (value != "Select") {
            $("#RoleId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetRoles")', // we are calling json method

                    dataType: 'json',

                    data: { projectId: $("#ProjectId").val(), RoleId:0 },
                    // here we are get value of selected country and passing same value as inputto json method GetStates.


                    success: function(Role) {

                        // states contains the JSON formatted list
                        // of states passed from the controller
                        var items = '<option value="">Select</option>';
                        $.each(Role,
                            function (i, Role) {
                                debugger
                                items += "<option value='" + Role.Value + "'>" + Role.Text + "</option>";
                                //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                                //    Taluqa.Text + '</option>');
                                // here we are adding option for States

                            });
                        $('#RoleId').html(items);
                        $('#UserDropdown').slideDown();
                    },
                    error: function(ex) {
                        var items = '<option value="">Select</option>';
                        $('#RoleId').html(items);
                        $('#UserDropdown').slideUp();
                    }
                });
        } else {

            $('#UserDropdown').slideUp();
        }
     }*@



    $(".validation").change(function () {

        var username = $("#UserName").val();
        var email = $("#Email").val();
        if (username != "") {
            assignUserName(username);
        }
        if (email != "") {
            assignEmail(email);
        }

    });
    function assignUserName(username) {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("assignUserName")', // we are calling json method

            dataType: 'json',

            data: { userName: username },
            // here we are get value of selected country and passing same value as inputto json method GetStates.

            success: function (value) {
                if (value ==  true) {
                    $('#errorlabel').text('Username is already in used');
                    $('#savebtn').attr('disabled', "disabled");
                }
                else {
                    $('#errorlabel').text('');
                    $('#savebtn').removeAttr('disabled', "disabled");
                }
            },
            error: function(ex) {
                $('#savebtn').attr('disabled', "disabled");
            }
        });
    }

    function assignEmail(email) {
        debugger;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("assignEmail")', // we are calling json method

            dataType: 'json',

            data: { Email: email },
            // here we are get value of selected country and passing same value as inputto json method GetStates.

            success: function (value) {
                if (value ==  true) {
                    $('#errorlabel1').text('E-Mail is already in used');
                    $('#savebtn').attr('disabled', "disabled");
                }
                else {
                    $('#errorlabel1').text('');
                    $('#savebtn').removeAttr('disabled', "disabled");
                }
            },
            error: function(ex) {
                $('#savebtn').attr('disabled', "disabled");
            }
        });
    }
</script>

@*$(document).ready(function () {


        //Dropdownlist Selectedchange event
        $("#RegionId").change(function() {


            $("#TaluqaId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates")', // we are calling json method

                dataType: 'json',

                data: { taluqaId: $("#RegionId").val() },
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function(Taluqa) {

                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var items = '<option>Select</option>';
                    $.each(Taluqa,
                        function(i, Taluqa) {
                            debugger
                            items += "<option value='" + Taluqa.Value + "'>" + Taluqa.Text + "</option>";
                            //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                            //    Taluqa.Text + '</option>');
                            // here we are adding option for States

                        });
                    $('#TaluqaId').html(items);
                },
                error: function(ex) {


                    var items = '<option>Select</option>';
                    $('#TaluqaId').html(items);
                    $('#UnionCouncilId').html(items);
                }
            });
            return false;
        });


        $("#TaluqaId").change(function() {

            var value = $("#TaluqaId").val();
            if (value != "Select") {
                $("#UnionCouncilId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetUnions")', // we are calling json method

                    dataType: 'json',

                    data: { taluqaId: value },
                    // here we are get value of selected country and passing same value as inputto json method GetStates.


                    success: function(UnionCounil) {

                        // states contains the JSON formatted list
                        // of states passed from the controller
                        var items = '<option>Select</option>';
                        $.each(UnionCounil,
                            function(i, UnionCounil) {

                                items += "<option value='" + UnionCounil.Value + "'>" + UnionCounil.Text + "</option>";
                                //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                                //    Taluqa.Text + '</option>');
                                // here we are adding option for States

                            });
                        $('#UnionCouncilId').html(items);
                    },
                    error: function(ex) {


                        var items = '<option>Select</option>';
                        $('#UnionCouncilId').html(items);
                    }
                });
                return false;
            } else {
                var items = '<option>Select</option>';
                $('#UnionCouncilId').html(items);
            }

        });

    });

    </script>*@




