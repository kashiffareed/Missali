
@using Hands.Common.Common
@model Hands.ViewModels.Models.Realcreate

    @{
        ViewBag.Title = "Create";
    }

<script type="text/javascript">

    var right =
        '@(HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.create.ToInt() && x.MenuId == CommonConstant.MenuList.RealTimeMonitoring.ToInt()))';

    if (right === 'False') {
        window.location.href = '@Url.Action("Index","Default")';
    }
</script>

<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
    }

    .m-footer {
        display: none
    }

    .titlehead {
        font-size: 22px;
        color: #676767;
        padding-top: 12px;
    }
</style>

<div id="TargeDiv">
<div class="m-content">


<div class="col-lg-12">
<!--begin::Portlet-->
<div class="m-portlet">

    <div class="" style="    padding: 6px;">
        @*@using (Ajax.BeginForm("Create", "Real",
        new AjaxOptions
        {
            LoadingElementId = "resultLoadingDiv",
            InsertionMode = InsertionMode.Replace,
            OnBegin = "ShowProcessingMsg",
            OnComplete = "HideProcessingMsg",
            OnSuccess = "success",
            UpdateTargetId = "TargeDiv"

        },
        new { enctype = "multipart/form-data", @id = "loginForm" }))*@
        @using (Html.BeginForm("Create", "Real", FormMethod.Post, new { enctype = "multipart/form-data", id = "loginForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.ProjectId)
           

            <div class="form-horizontal" style="padding-left: 14px;">
                <h4 class="titlehead">Create Appuser (REALTIME)</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*@{
                    var marviSelectListItems = Model.Marvis.Select(r => new SelectListItem { Text = r.FullName, Value = r.AppUserId.ToString() }).ToList();
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.AppUserId, new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(f => f.AppUserId, marviSelectListItems, "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AppUserId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.Label("Full Name", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("User Name", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Password", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.PasswordFor(model => model.Pwd, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.Label("DOB", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">

                        <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                            @Html.TextBoxFor(x => x.Dob, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>

                        </div>
                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Address", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Contact Number", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Marital Status", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @*@Html.TextBoxFor(model => model.MaritialStatus, new { @class = "form-control" })*@
                        @Html.DropDownListFor(x => x.MaritalStatus, new List<SelectListItem>
                        {
                            new SelectListItem{ Text="Select", Value = "" },
                            new SelectListItem{ Text="Married", Value = "married" },
                            new SelectListItem{ Text="Divorced", Value = "divorced" },
                            new SelectListItem{ Text="Widow", Value = "widow" },
                        }, new { @class = "form-control" })

                    </div>
                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("Father/Husband Name", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.FatherHusbandName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FatherHusbandName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Age Per Cnic", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.AgePerCnic, new { @class = "form-control", maxlength = "3" })
                        @Html.ValidationMessageFor(model => model.AgePerCnic, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("CNIC", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Cnic, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Cnic, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("CNIC Validty", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">

                        <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                            @Html.TextBoxFor(x => x.CnicValidtyEnd, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })

                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>

                        </div>
                        @Html.ValidationMessageFor(model => model.CnicValidtyEnd, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Qualification", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Qualification, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                    </div>
                </div>

                @{
                    var regionSelectListItems = Model.Regions.Select(r => new SelectListItem { Text = r.RegionName, Value = r.RegionsId.ToString() }).ToList();
                }
                <div class="form-group">
                    @Html.Label("District", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(f => f.RegionId, regionSelectListItems, "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.Label("Region", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.RegionId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                @*<div class="form-group">
                    @Html.Label("Taluka", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(f => f.TaluqaId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TaluqaId, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.Label("Union Council", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(f => f.UnionCouncilId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UnionCouncilId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group">
                    @Html.Label("Organization", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Organization, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Designation", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Email", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Picture", new { @class = "control-label col-md-2" })

                    <div class="col-md-6">
                        <input type="file" name="file" class="form-control" id="imgInp" accept="image/gif,image/jpeg,image/png" />
                        <br />
                        <div id="preview"></div>
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.Label("Population Covered", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.PopulcationCovered, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PopulcationCovered, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("No of House Holds", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.NoOfHouseHolds, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NoOfHouseHolds, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Target Mwra's", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.TargetMwras, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TargetMwras, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Nearby Public Faculty", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.NearbyPublicFaculty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NearbyPublicFaculty, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Nearby Private Faculty", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.NearbyPrivatefaculty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NearbyPrivatefaculty, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.Label("Date of join", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">

                        <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                            @Html.TextBoxFor(x => x.DateOfJoin, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })

                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>

                        </div>
                        @Html.ValidationMessageFor(model => model.DateOfJoin, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.Label("Date of Train", new { @class = "control-label col-md-2" })
                    <div class="col-md-6">

                        <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                            @Html.TextBoxFor(x => x.dateOfTrain, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })

                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>

                        </div>
                        @Html.ValidationMessageFor(model => model.dateOfTrain, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
                        <input type="submit" value="Save" id="submitform" class="edit-button btn btn-primary top-button" />
                        <a href="~/Real/index?class=m-scroll-top"><span class="fa fa-arrow-circle-o-left col-md-offset-2" style="font-size: 36px;    float: right;"></span></a>
                    </div>

                </div>

                <div id="resultLoadingDiv" hidden class="popup">
                    <img src="~/Content/Images/abc.gif" />
                    @*<img taluqaId="image" src="~/Content/Images/ajax-loader.gif"/>*@
                </div>
            </div>
        }


    </div>

</div>
<!--end::Portlet-->
</div>




</div>


</div>







<script type="text/javascript">

    function ShowProcessingMsg() {
        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }
    function success() {
        swal("Successful!", "Your record has been successfully saved!", "success");
    }
    $("#submitform").click(function () {

        if ($('#loginForm').valid()) {
            ShowProcessingMsg();
        }
    });

  $(document).ready(function () {

        $("#RegionId").change(function() {
            

            var data = $("#RegionId").val();
            $("#TaluqaId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates")', // we are calling json method

                dataType: 'json',

                data: { regionId: $("#RegionId").val(), TaluqaId:0 },
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function(Taluqa) {
                    
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var items = '<option>Select</option>';
                    $.each(Taluqa,
                        function(i, Taluqa) {
                            debugger
                            items += "<option value='" + Taluqa.Value + "'>" + Taluqa.Text + "</option>";
                            //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                            //    Taluqa.Text + '</option>');
                            // here we are adding option for States

                        });
                    $('#TaluqaId').html(items);
                },
                error: function(ex) {
                    

                    var items = '<option>Select</option>';
                    $('#TaluqaId').html(items);
                    $('#UnionCouncilId').html(items);
                }
            });
            return false;
        });


        $("#TaluqaId").change(function() {
            
            var value = $("#TaluqaId").val();
            if (value != "Select") {
                $("#UnionCouncilId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetUnions")', // we are calling json method

                    dataType: 'json',

                    data: { taluqaId: value, UnionCouncilId: 0 },
                    // here we are get value of selected country and passing same value as inputto json method GetStates.


                    success: function(UnionCounil) {
                        
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        var items = '<option>Select</option>';
                        $.each(UnionCounil,
                            function(i, UnionCounil) {

                                items += "<option value='" + UnionCounil.Value + "'>" + UnionCounil.Text + "</option>";
                                //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                                //    Taluqa.Text + '</option>');
                                // here we are adding option for States

                            });
                        $('#UnionCouncilId').html(items);
                    },
                    error: function(ex) {
                        

                        var items = '<option>Select</option>';
                        $('#UnionCouncilId').html(items);
                    }
                });
                return false;
            } else {
                var items = '<option>Select</option>';
                $('#UnionCouncilId').html(items);
            }

        });

    });
    $('#imgInp').change(function () {
        readURL1(this);
    });
    function readURL1(input) {
        if (input.files && input.files[0]) {
            
            var reader = new FileReader();
            reader.onloadend = function (video) {
                if (input.files[0].type.match('image')) {
                    
                    $("#preview").html("<img src= "+video.target.result+" height=200 width=200 />");


                    //$("#preview-video-thumb").attr("src", "");
                    //$("#preview-thumb").attr("src", video.target.result);
                    $('#preview').css('display', 'inline');

                } else {
                    $("#preview").html(" <video  id=previewvideo src = "+video.target.result+"  height=200 width=200 ></video>");

                    //$("#preview-video-thumb").attr("src", video.target.result);
                    //$("#preview-thumb").attr("src", "");
                    $("#preview").css('display', 'inline');

                }
            };
            reader.readAsDataURL(input.files[0]);


        }

    }
</script>

