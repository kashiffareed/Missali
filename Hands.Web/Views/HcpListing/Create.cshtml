
@using Hands.Common.Common
@model Hands.ViewModels.Models.hcp

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">

    var right =
        '@(HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.create.ToInt() && x.MenuId == CommonConstant.MenuList.HCPListing.ToInt()))';

    if (right === 'False') {
        window.location.href = '@Url.Action("Index","Default")';
    }
</script>

<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
    }

    .m-footer {
        display: none
    }

    .titlehead {
        font-size: 22px;
        color: #676767;
        padding-top: 12px;
    }
</style>


<div id="TargeDiv">
    <div class="m-content">


        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <div class="" style="    padding: 6px;">
                    @using (Ajax.BeginForm("Create", "HcpListing",
                        new AjaxOptions
                        {
                            LoadingElementId = "resultLoadingDiv",
                            InsertionMode = InsertionMode.Replace,
                            OnBegin = "ShowProcessingMsg",
                            OnComplete = "HideProcessingMsg",
                            OnSuccess = "success",
                            UpdateTargetId = "TargeDiv"

                        },
                        new { @id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x=>x.ProjectId)
                        <div class="form-horizontal" style="    padding-left: 14px;">
                            <h4 class="titlehead">Create Appuser (HCP)</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @*@{
                                    var marviSelectListItems = Model.Marvis.Select(r => new SelectListItem { Text = r.FullName, Value = r.AppUserId.ToString() }).ToList();
                                }
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AppUserId, new { @class = "control-label col-md-2" })
                                    <div class="col-md-6">
                                        @Html.DropDownListFor(f => f.AppUserId, marviSelectListItems, "Select", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AppUserId, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                @Html.Label("Name", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Husband Name", new { @class = "control-label col-md-3" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.FatherHusbandName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FatherHusbandName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("CNIC No", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Cnic, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Cnic, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Contact No", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Village", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @{
                                var regionSelectListItems = Model.Regions.Select(r => new SelectListItem { Text = r.RegionName, Value = r.RegionsId.ToString() }).ToList();
                            }
                            <div class="form-group">
                                @Html.Label("District", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.RegionId, regionSelectListItems, "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Taluka", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.TaluqaId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TaluqaId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        <div class="form-group">
                            @Html.Label("Union Council", new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(f => f.UnionCouncilId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UnionCouncilId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Name of Clinic", new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.ClinicName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClinicName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Name of Private HCP", new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.PrivateHCP, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PrivateHCP, "", new { @class = "text-danger" })
                            </div>
                        </div>
                            <div class="form-group">
                                @Html.Label("Is She referred By Marvi (Yes/No)", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.RefferredbyMarvi, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="Yes", Value = "yes" },
new SelectListItem{ Text="No", Value = "no" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.RefferredbyMarvi, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Date Of Client Generation", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                        @Html.TextBoxFor(x => x.DateofClientGeneration, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.DateofClientGeneration, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Occasion", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @*@Html.TextBoxFor(model => model.MaritialStatus, new { @class = "form-control" })*@
                                    @Html.DropDownListFor(x => x.Occasion, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="Interval", Value = "Interval" },
new SelectListItem{ Text="Postpartum", Value = "Postpartum" },
new SelectListItem{ Text="Post Abortion", Value = "PostAbortion" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Occasion, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Referral", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @*@Html.TextBoxFor(model => model.MaritialStatus, new { @class = "form-control" })*@
                                    @Html.DropDownListFor(x => x.Referral, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="PPFP", Value = "PPFP" },
new SelectListItem{ Text="PAC", Value = "PAC" },
new SelectListItem{ Text="Name of referral facility / HCP", Value = "Nameofreferralfacility/HCP" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Referral, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("In case Of Current User, Date of Starting", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                        @Html.TextBoxFor(x => x.IncaseOfCurrentUserDateOfStarting, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.IncaseOfCurrentUserDateOfStarting, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("History Of Irregular Menstrual Cycle Yes/No", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.HistoryOfIrregularMenstrualcycle, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HistoryOfIrregularMenstrualcycle, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("LMP (Date)", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                        @Html.TextBoxFor(x => x.LmpDate, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.LmpDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("BP", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Bp, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Bp, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Weight", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Weight, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Jaundice Yes/No", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.Jaundice, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="Yes", Value = "yes" },
new SelectListItem{ Text="No", Value = "no" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Jaundice, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Pallor/Anemia Yes/No", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.PollarAnemia, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="Yes", Value = "yes" },
new SelectListItem{ Text="No", Value = "no" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.PollarAnemia, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Foul Smelling Vaginal Discharge Yes/No", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.Foulsmellingvaginaldischarge, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="Yes", Value = "yes" },
new SelectListItem{ Text="No", Value = "no" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Foulsmellingvaginaldischarge, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Pain Lower Abdomen Yes/No", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.Painlowerabdomen, new List<SelectListItem>
{
new SelectListItem{ Text="Select", Value = "" },
new SelectListItem{ Text="Yes", Value = "yes" },
new SelectListItem{ Text="No", Value = "no" },
}, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Painlowerabdomen, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Pills", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Pills, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Pills, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Condoms", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Condoms, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Condoms, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Injectables 1 month", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Injectables1Month, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Injectables1Month, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Injectables 2 month", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Injectables2Month, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Injectables2Month, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Injectables 3 month", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Injectables3Month, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Injectables3Month, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("IUCD 5 years", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Iucd5Year, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Iucd5Year, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("IUCD 10 years", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Iucd10Year, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Iucd10Year, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Implant", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Implant, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Implant, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("TL", new { @class = "control-label col-md-12" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Tl, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Tl, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("No of Marvi Workers", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.TotalMarviAssigned, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TotalMarviAssigned, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Population Covered", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.PopulcationCovered, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PopulcationCovered, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Longitude", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Longitude, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Latitude", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Latitude, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("User Name", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Password", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.PasswordFor(model => model.Pwd, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
                                                            @Html.Label("Age Per Cnic", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.AgePerCnic, new { @class = "form-control", maxlength = "3" })
                                                                @Html.ValidationMessageFor(model => model.AgePerCnic, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("CNIC Validty", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                                                    @Html.TextBoxFor(x => x.CnicValidtyEnd, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                                                    <div class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-th"></span>
                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.CnicValidtyEnd, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.Label("DOB", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                                                    @Html.TextBoxFor(x => x.Dob, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                                                    <div class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-th"></span>
                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Marital Status", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.DropDownListFor(x => x.MaritalStatus, new List<SelectListItem>
                                {
                                new SelectListItem{ Text="Select", Value = "" },
                                new SelectListItem{ Text="Married", Value = "married" },
                                new SelectListItem{ Text="Divorced", Value = "divorced" },
                                new SelectListItem{ Text="Widow", Value = "widow" },
                                }, new { @class = "form-control" })
                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Qualification", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.Qualification, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>



                                                        <div class="form-group">
                                                            @Html.Label("No of House Holds", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.NoOfHouseHolds, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.NoOfHouseHolds, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Target MWRAS", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.TargetMwras, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.TargetMwras, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Nearby Public Faculty", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.NearbyPublicFaculty, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.NearbyPublicFaculty, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Nearby Private Faculty", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                @Html.TextBoxFor(model => model.NearbyPrivatefaculty, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.NearbyPrivatefaculty, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Date of join", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                                                    @Html.TextBoxFor(x => x.DateOfJoin, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                                                    <div class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-th"></span>
                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.DateOfJoin, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group">
                                                            @Html.Label("Date of Train", new { @class = "control-label col-md-2" })
                                                            <div class="col-md-6">
                                                                <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                                                    @Html.TextBoxFor(x => x.dateOfTrain, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                                                    <div class="input-group-addon">
                                                                        <span class="glyphicon glyphicon-th"></span>
                                                                    </div>
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.dateOfTrain, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>*@






                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
                                    <input type="submit" value="Save" class="edit-button btn btn-primary top-button" />
                                    <a href="~/HcpListing/index?class=m-scroll-top"><span class="fa fa-arrow-circle-o-left col-md-offset-2" style="font-size: 36px;    float: right;"></span></a>
                                </div>

                            </div>

                            <div id="resultLoadingDiv" hidden class="popup">
                                <img src="~/Content/Images/abc.gif" />
                                @*<img taluqaId="image" src="~/Content/Images/ajax-loader.gif"/>*@
                            </div>
                        </div>
                    }

                </div>

            </div>
            <!--end::Portlet-->
        </div>




    </div>


</div>






<script type="text/javascript">

    function ShowProcessingMsg() {
        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }
    function success() {
        swal("Successful!", "Your record has been successfully saved!", "success");
    }

  $(document).ready(function () {

        $("#RegionId").change(function() {


            var data = $("#RegionId").val();
            $("#TaluqaId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates")', // we are calling json method

                dataType: 'json',

                data: { regionId: $("#RegionId").val(), TaluqaId:0 },
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function(Taluqa) {

                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var items = '<option>Select</option>';
                    $.each(Taluqa,
                        function(i, Taluqa) {
                            debugger
                            items += "<option value='" + Taluqa.Value + "'>" + Taluqa.Text + "</option>";
                            //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                            //    Taluqa.Text + '</option>');
                            // here we are adding option for States

                        });
                    $('#TaluqaId').html(items);
                },
                error: function(ex) {


                    var items = '<option>Select</option>';
                    $('#TaluqaId').html(items);
                    $('#UnionCouncilId').html(items);
                }
            });
            return false;
        });


        $("#TaluqaId").change(function() {

            var value = $("#TaluqaId").val();
            if (value != "Select") {
                $("#UnionCouncilId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetUnions")', // we are calling json method

                    dataType: 'json',

                    data: { taluqaId: value, UnionCouncilId: 0 },
                    // here we are get value of selected country and passing same value as inputto json method GetStates.


                    success: function(UnionCounil) {

                        // states contains the JSON formatted list
                        // of states passed from the controller
                        var items = '<option>Select</option>';
                        $.each(UnionCounil,
                            function(i, UnionCounil) {

                                items += "<option value='" + UnionCounil.Value + "'>" + UnionCounil.Text + "</option>";
                                //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                                //    Taluqa.Text + '</option>');
                                // here we are adding option for States

                            });
                        $('#UnionCouncilId').html(items);
                    },
                    error: function(ex) {


                        var items = '<option>Select</option>';
                        $('#UnionCouncilId').html(items);
                    }
                });
                return false;
            } else {
                var items = '<option>Select</option>';
                $('#UnionCouncilId').html(items);
            }

        });

    });

</script>
