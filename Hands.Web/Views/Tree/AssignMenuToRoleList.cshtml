@model  IEnumerable<Hands.Data.HandsDB.Role>
@using System.Web.UI.HtmlControls
@using NonFactors.Mvc.Grid;
@{
    ViewBag.Title = "Details";
}
<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
        z-index: 10000000000000;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.075);
    }

    .fa {
        display: inline-block;
        font: normal normal normal 14px/1 FontAwesome;
        font-size: inherit;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .widget-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.25);
        align-items: center;
        padding: 8px 12px;
        color: #080808;
        font-size: 16px;
        display: flex;
    }

    .mvc-grid-filter::before {
        color: #f4516c !important;
    }

    .abc {
        width: 12%;
        text-align: center;
        background: #f0efff !important;
    }

    *::before, *::after {
        box-sizing: border-box;
    }

    .test {
        width: 100%
    }

    .titlehead {
        font-size: 25px;
        color: #676767;
    }

    .filterable {
        background: #f0efff !important;
        color: #74749a !important;
    }

    .btn {
        padding: 4px 14px !important;
    }

    th.filterable {
        background: #f0efff !important;
    }

    th {
        color: #74749a !important;
        background: #f0efff !important;
    }
</style>
<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
<div id="resultLoadingDiv" hidden class="popup">
    <img src="~/Content/Images/abc.gif" />

</div>
<div id="PrjDiv">

    <div class="m-content">


        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <div class="row" style="padding: 16px;">

                    <div class="m-portlet__head-text col-md-12 pull-left titlehead">Assign Role to Menu Listing</div>

                    <div class="col-md-2">
                        @Html.ActionLink("Add", "Index", "Tree", null, new { @class = "btn btn-primary top-button test" })
                    </div>
                    @*<div class="col-md-2">
                            @Html.ActionLink("Import", "Import", "Cms", new { @class = "btn btn-primary top-button test" })
                        </div>*@
                    @*<div class="col-md-2">
                            @Html.ActionLink("Export CSV", "ExportIndex", "Cms", ViewContext.HttpContext.Request.QueryString, new { @class = "btn btn-primary top-button test" })
                        </div>*@

                </div>

                <div class="" style="padding: 6px;">

                    @(Html.Grid(Model).Build(columns =>
                                {
                                    columns.Add(c => c.RoleName).Titled("Role Name").Filterable(true);

                                        //columns.Add(model => Html.ActionLink("Download", "DownloadAdTemplate", new { pathCode = model.path}, new { @class = "edit-button btn btn-primary top-button" })).Titled("ATTACHMENT ENGLISH");


                                        //columns.Add(model => Html.ActionLink("Edit", "Edit", new { id = model.content_id }, new { @class = "edit-button btn btn-primary top-button" })).Css("abc");

                                        columns.Add(model => Html.ActionLink("Menu Detail", "AssignMenuToRoleDetialList", new { roleId = model.RoleId }, new { @class = "edit-button btn btn-primary top-button" })).Css("abc");

                                }).Css("css-classes") // Overwrites all classes with the new ones
                                                                                                                  .AppendCss("table-hover") // Appends classes to the current ones
                                                                                                                          .Pageable(pager =>
                                                                                                                          {
                                                                                                                              pager.PageSizes = new Dictionary<int, string>()
                                                                                                                      {
                                                                                                                              {0, "All"},
                                                                                                                              {10, "10"},
                                                                                                                              {20, "20"},
                                                                                                                              {50, "50"},
                                                                                                                              {100, "100"}
                                                                                                                      };


                                                                                                                              pager.ShowPageSizes = true;
                                                                                                                              pager.PagesToDisplay = 10;
                                                                                                                              pager.RowsPerPage = 10;
                                                                                                                          })
                                                                                                                          .WithFilterMode(GridFilterMode.FilterRow)
                                                                                                                          .Empty("No data found")
                                                                                                                          .Filterable()

                    )
                </div>

            </div>
            <!--end::Portlet-->
        </div>





    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $(".btn-success").click(function () {
            window.location.href = '@Url.Action("index", "Cms")';
        });

        if ('@TempData["status"]' == 1) {
            success();
        } else if('@TempData["status"]' == 2)  {
            successEdit();
        }
        else if('@TempData["status"]' == 3)  {
            successDelete();
        }

    });
function ShowProcessingMsg() {

    $('#resultLoadingDiv').removeAttr('hidden');

}
function HideProcessingMsg() {

    $('#resultLoadingDiv').attr('hidden', '');
}
function successDelete() {
    swal("Successful!", "Your record has been deleted successful!", "success");
}
    function success() {
        swal("Successful!", "Your record has been successfully saved!", "success");
    }
    function successEdit() {
        swal("Successful!", "Your record has been successfully Updated!", "success");
    }
</script>

