@model  IEnumerable<Hands.Data.HandsDB.Mwra>
@using Hands.Common.Common
@using NonFactors.Mvc.Grid;
@{
    ViewBag.Title = "MWRA'S";

}


<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

@*@Html.AjaxGrid(Url.Action("Index"))

    @Html.AjaxGrid(Url.Action("Index"), new { id = "my-ajax-grid" })*@
<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
        z-index: 10000000000000;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.075);
    }

    .fa {
        display: inline-block;
        font: normal normal normal 14px/1 FontAwesome;
        font-size: inherit;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .widget-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.25);
        align-items: center;
        padding: 8px 12px;
        color: #080808;
        font-size: 16px;
        display: flex;
    }

    .mvc-grid-filter::before {
        color: #f4516c !important;
    }

    .abc {
        width: 12%;
        text-align: center;
        background: #f0efff !important;
    }

    *::before, *::after {
        box-sizing: border-box;
    }

    .test {
        width: 100%
    }

    .titlehead {
        font-size: 25px;
        color: #676767;
    }

    .filterable {
        background: #f0efff !important;
        color: #74749a !important;
    }

    .btn {
        padding: 4px 14px !important;
    }
</style>
<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
<div id="resultLoadingDiv" hidden class="popup">
    <img src="~/Content/Images/abc.gif" />
    @*<img id="image" src="~/Content/Images/ajax-loader.gif"/>*@
</div>


<div id="PrjDiv">


    <div class="m-content">


        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <div class="row" style="padding: 16px;">

                    <div class="m-portlet__head-text col-md-10 pull-left titlehead">MWRA Listing</div>

                    @*<div class="col-md-2 pull-right ">
                        @Html.ActionLink("Create", "Create", "Mwra", null, new { @class = "btn btn-primary top-button test" })
                    </div>*@
                </div>

                <div class="" style="padding: 6px;">


                    @(Html
                                  .Grid(Model)
                                  .Build(columns =>
                                  {

                                      columns.Add(model => model.Name).Titled("Name").Sortable(true).Filterable(true);
                                      columns.Add(model => model.ContactNumber).Titled("Contact Number").Sortable(false);
                                      columns.Add(model => model.DateOfRegistration).Titled("Registered").Sortable(false);
                                      columns.Add(model => model.CreatedAt).Titled("Date").Sortable(false);

                                      columns.Add(model => HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.edit.ToInt() && x.MenuId == CommonConstant.MenuList.ClientLising.ToInt()) ? "<a class='edit-button btn btn-primary top-button' href='" + Url.Action("View", new { id = model.MwraId }) + "'>Edit</a>" : "").Encoded(false);
                                      columns.Add(model => HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.delete.ToInt() && x.MenuId == CommonConstant.MenuList.ClientLising.ToInt()) ? "<a class='delete-button btn btn-danger top-button deleteBtn' href='" + Url.Action("Delete", new { id = model.MwraId }) + "'>Delete</a>" : "").Sortable(true).Encoded(false);


                                     /// columns.Add(model => Html.ActionLink("Edit", "Edit", new { id = model.MwraId }, new { @class = "edit-button btn btn-primary top-button" })).Css("abc");
                                          // columns.Add(model => Html.ActionLink("Delete", "Delete", new { id = model.MwraId }, new { @class = "delete-button btn btn-danger top-button deleteBtn" })).Css("abc");
                                          // columns.Add(model => "<button class='delete-button btn btn-danger top-button deleteBtn' data-id=\"" + model.MwraId + "\">Delete</button>").Encoded(false);
                                      //    columns.Add(model => Ajax.ActionLink("Delete", "Delete", "Mwra", new { id = model.MwraId }, new AjaxOptions()
                                      //{
                                       //   HttpMethod = "POST",
                                         // LoadingElementId = "resultLoadingDiv",
                                        // UpdateTargetId = "PrjDiv",
                                        //  OnBegin = "ShowProcessingMsg",
                                        //  OnComplete = "HideProcessingMsg",
                                        //  OnSuccess = "success"
                                     // }, new { @class = "delete-button btn btn-danger top-button deleteBtn" })).Css("abc");
                                  })
                                  .Css("css-classes") // Overwrites all classes with the new ones
                                  .AppendCss("table-hover") // Appends classes to the current ones
                                      .Pageable(pager =>
                                      {
                                          pager.PagesToDisplay = 10;
                                          pager.RowsPerPage = 20;
                                      })
                                  .WithFilterMode(GridFilterMode.FilterRow)
                                  .Empty("No data found")
                                  .Filterable()



                    )

                </div>

            </div>
            <!--end::Portlet-->
        </div>





    </div>
</div>





<script type="text/javascript">
    //$( document ).ready(function() {
    //    $(".swal-button--confirm").on("click", function () {

    //        window.location.reload();
    //    });
    //});




    function ShowProcessingMsg() {

        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }
    function success() {
        swal("Successful!", "Your record has been deleted successful!", "success");
    }

    //$(".deleteBtn").on("click", function () {

    //    swal("Are you sure?", {
    //        dangerMode: true,
    //        buttons: true
    //    });
    //});


    //$(".swal-button--confirm").on("click", function () { alert(1); });

    //function dialog() {
    //    
    //      swal({
    //            title: "Are you sure?",
    //            text: "You will not be able to recover this imaginary file!",
    //            type: "warning",
    //            showCancelButton: true,
    //            confirmButtonClass: "btn-danger",
    //            confirmButtonText: "Yes, delete it!",
    //            cancelButtonText: "No, cancel plx!",
    //            closeOnConfirm: false,
    //            closeOnCancel: false
    //        },
    //        function (isConfirm) {
    //            
    //            if (isConfirm) {
    //                swal("Deleted!", "Your imaginary file has been deleted.", "success");
    //            } else {
    //                swal("Cancelled", "Your imaginary file is safe :)", "error");
    //            }
    //        });

    //}

    @*$(document).ready(function () {
        $(".deleteBtn").click(function () {
            
            var sender =  $(e.currentTarget);
            var mwraId = sender.attr('id');

            swal({
                    title: "Are you sure?",
                    text: "Once deleted, you will not be able to recover this imaginary file!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                .then((willDelete) => {
                    if (willDelete) {

                        var url = @Url.Action("Delete","Mwra") + "/" + mwraId;

                        $.ajax({
                            url: url

                        }).done(function() {
                            swal("Poof! Your imaginary file has been deleted!", {
                                icon: "success",
                            });
                        });


                    } else {
                        swal("Your imaginary file is safe!");
                    }
                });

        });
    });*@




    //function test() {

    //    swal({
    //        title: "Are you sure?",
    //        text: "Once deleted, you will not be able to recover this imaginary file!",
    //        icon: "warning",
    //        buttons: true,
    //        dangerMode: true,
    //    })
    //        .then((willDelete) => {
    //            if (willDelete) {
    //                swal("Poof! Your imaginary file has been deleted!",
    //                    {
    //                        icon: "success",
    //                    });
    //            } else {
    //                swal("Your imaginary file is safe!");
    //            }
    //        });
    //}


</script>


