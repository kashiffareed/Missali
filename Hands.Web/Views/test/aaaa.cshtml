@model Hands.ViewModels.Models.Mwra

@{
    ViewBag.Title = "Create Mwra";

}




<style>
    .popup {
        position: fixed;
        background: #5f5f5f8c;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
    }

    .m-footer {
        display: none
    }

    .titlehead {
        font-size: 22px;
        color: #676767;
        padding-top: 12px;
    }
</style>

<div id="TargeDiv">
    <div class="m-content">
        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">

                <div class="" style="    padding: 6px;">
                    @using (Ajax.BeginForm("Create", "Mwra",
                                new AjaxOptions
                                {
                                    LoadingElementId = "resultLoadingDiv",
                                    InsertionMode = InsertionMode.Replace,
                                    OnBegin = "ShowProcessingMsg",
                                    OnComplete = "HideProcessingMsg",
                                    OnSuccess = "success",
                                    UpdateTargetId = "TargeDiv"

                                },
                                new { @id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal" style="    padding-left: 14px;">
                            <h4 class="titlehead">Create Mwra</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @{
                                var marviSelectListItems = Model.Marvis.Select(r => new SelectListItem { Text = r.FullName, Value = r.AppUserId.ToString() }).ToList();
                            }
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedMarviId, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.AssignedMarviId, marviSelectListItems, "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssignedMarviId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">

                                @Html.Label("DOB", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">

                                    <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy" data-date-autoclose="true">
                                        @Html.TextBoxFor(x => x.Dob, new { @class = "form-control", id = "data-date", autocomplete = "off", @readonly = "readonly" })
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ContactNumber, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Marital Status", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @*@Html.TextBoxFor(model => model.MaritialStatus, new { @class = "form-control" })*@
                                    @Html.DropDownListFor(x=>x.MaritialStatus, new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="Select", Value = "" },
                                        new SelectListItem{ Text="Married", Value = "married" },
                                        new SelectListItem{ Text="Divorced", Value = "divorced" },
                                        new SelectListItem{ Text="Widow", Value = "widow" },
                                    },new { @class = "form-control" })

                                </div>
                                @Html.ValidationMessageFor(model => model.MaritialStatus, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Cnic, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Cnic, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Cnic, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.HusbandName, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.HusbandName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.HusbandName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Age, new { @class = "form-control", maxlength = "3" })
                                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Occupation, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.Occupation, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @{
                                var regionSelectListItems = Model.Regions.Select(r => new SelectListItem { Text = r.RegionName, Value = r.RegionsId.ToString() }).ToList();
                            }
                            <div class="form-group">
                                @Html.LabelFor(model => model.RegionId, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.RegionId, regionSelectListItems, "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TaluqaId, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.TaluqaId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TaluqaId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.UnionCouncilId, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.UnionCouncilId, new SelectList(string.Empty, "Value", "Text"), "Select", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UnionCouncilId, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
                                    <input type="submit" value="Save" class="edit-button btn btn-primary top-button" />
                                    <a href="~/mwra/index?class=m-scroll-top"><span class="fa fa-arrow-circle-o-left col-md-offset-2" style="font-size: 36px;    float: right;"></span></a>
                                </div>

                            </div>

                            <div id="resultLoadingDiv" hidden class="popup">
                                <img src="~/Content/Images/abc.gif" />
                                @*<img taluqaId="image" src="~/Content/Images/ajax-loader.gif"/>*@
                            </div>
                        </div>
                    }


                </div>

            </div>
            <!--end::Portlet-->
        </div>




    </div>


</div>







<script type="text/javascript">

    function ShowProcessingMsg() {
        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }
    function success() {
        swal("Successful!", "Your record has been successfully saved!", "success");
    }

  $(document).ready(function () {

        $("#RegionId").change(function() {
            debugger;

            var data = $("#RegionId").val();
            $("#TaluqaId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates")', // we are calling json method

                dataType: 'json',

                data: { regionId: $("#RegionId").val(), TaluqaId:0 },
                // here we are get value of selected country and passing same value as inputto json method GetStates.


                success: function(Taluqa) {
                    debugger;
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var items = '<option>Select</option>';
                    $.each(Taluqa,
                        function(i, Taluqa) {
                            debugger
                            items += "<option value='" + Taluqa.Value + "'>" + Taluqa.Text + "</option>";
                            //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                            //    Taluqa.Text + '</option>');
                            // here we are adding option for States

                        });
                    $('#TaluqaId').html(items);
                },
                error: function(ex) {
                    debugger;

                    var items = '<option>Select</option>';
                    $('#TaluqaId').html(items);
                    $('#UnionCouncilId').html(items);
                }
            });
            return false;
        });


        $("#TaluqaId").change(function() {
            debugger;
            var value = $("#TaluqaId").val();
            if (value != "Select") {
                $("#UnionCouncilId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetUnions")', // we are calling json method

                    dataType: 'json',

                    data: { taluqaId: value, UnionCouncilId: 0 },
                    // here we are get value of selected country and passing same value as inputto json method GetStates.


                    success: function(UnionCounil) {
                        debugger;
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        var items = '<option>Select</option>';
                        $.each(UnionCounil,
                            function(i, UnionCounil) {

                                items += "<option value='" + UnionCounil.Value + "'>" + UnionCounil.Text + "</option>";
                                //$("#TaluqaId").append('<option value="' + Taluqa.Value + '">' +
                                //    Taluqa.Text + '</option>');
                                // here we are adding option for States

                            });
                        $('#UnionCouncilId').html(items);
                    },
                    error: function(ex) {
                        debugger;

                        var items = '<option>Select</option>';
                        $('#UnionCouncilId').html(items);
                    }
                });
                return false;
            } else {
                var items = '<option>Select</option>';
                $('#UnionCouncilId').html(items);
            }

        });

    });

</script> 