
@using Hands.Common.Common
@model  Hands.ViewModels.Models.shopkeeper
<div class="col-lg-12">
<!--begin::Portlet-->
<div class="m-portlet">

<div class="row" style="padding: 16px;">
    <div class="m-portlet__head-text col-md-10 pull-left titlehead">ShopKeeper Listing</div>
    <div class="col-md-2" @(HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.create.ToInt() && x.MenuId == CommonConstant.MenuList.ShopKeeperListing.ToInt()) ? "" : "hidden")>
        @Html.ActionLink("Add", "Create", "ShopKeeper", null, new { @class = "btn btn-primary top-button test" })
    </div>
</div>
        
<div class="" style="padding: 6px;" id="divUpdate">
    @(Html.Grid(Model.ShopkeeperList).Build(columns =>
{
columns.Add(c => c.app_user_id).Titled("User ID").Filterable(true);
columns.Add(c => c.ShopName).Titled("Shop Name").Filterable(true);
columns.Add(c => c.full_name).Titled("Name of Shopkeeper").Filterable(true);
columns.Add(c => c.father_husband_name).Titled("Father/Husband Name").Filterable(true);
columns.Add(c => c.cnic).Titled("CNIC No").Filterable(true);
columns.Add(c => c.cnic_validty_end).Titled("CNIC Validity End").Filterable(true);
columns.Add(c => c.address).Titled("Village").Filterable(true);
columns.Add(c => c.region_name).Titled("Dictrict").Filterable(true);
columns.Add(c => c.taluqa_name).Titled("Taluka").Filterable(true);
columns.Add(c => c.union_council_name).Titled("Union Council").Filterable(true);
columns.Add(c => c.contact_number).Titled("Contact No").Filterable(true);
columns.Add(c => c.qualification).Titled("Qualification").Filterable(true);
columns.Add(c => c.total_marvi_assigned).Titled("No of Marvi Workers").Filterable(true);
columns.Add(c => c.populcation_covered).Titled("Population covered").Filterable(true);
columns.Add(c => c.Longitude).Titled("Longitude").Filterable(true);
columns.Add(c => c.Latitude).Titled("Latitude").Filterable(true);

columns.Add(model => Html.ActionLink("VIEW", "View", new { id = model.app_user_id }, new { @class = "edit-button btn btn-primary top-button" })).Css("abc");
columns.Add(model => HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.edit.ToInt() && x.MenuId == CommonConstant.MenuList.ShopKeeperListing.ToInt()) ? "<a class='edit-button btn btn-primary top-button' href='" + Url.Action("Edit", new { id = model.app_user_id }) + "'>Edit</a>" : "").Encoded(false).Css("abc");
//columns.Add(model => HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.delete.ToInt() && x.MenuId == CommonConstant.MenuList.ShopKeeperListing.ToInt()) ? "<a class='delete-button btn btn-danger top-button deleteBtn' href='" + Url.Action("Delete", new { id = model.app_user_id }) + "'>Delete</a>" : "").Sortable(true).Encoded(false);



if (HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.delete.ToInt() && x.MenuId == CommonConstant.MenuList.CMS.ToInt()))
{
    columns.Add(model => Ajax.ActionLink("Delete", "Delete", "ShopKeeper", new { id = model.app_user_id }, new AjaxOptions()
    {
        HttpMethod = "POST",
        LoadingElementId = "resultLoadingDiv",
        UpdateTargetId = "PrjDiv",
        OnBegin = "ShowProcessingMsg",
        OnComplete = "HideProcessingMsg",
        OnSuccess = "success"
    }, new { @class = "delete-button btn btn-danger top-button deleteBtn" })).Css("abc");
}
//columns.Add(model => Html.ActionLink("EDIT", "Edit", new { id = model.app_user_id }, new { @class = "edit-button btn btn-primary top-button" })).Css("abc");
//columns.Add(model => Ajax.ActionLink("DELETE", "Delete", "ShopKeeper", new { id = model.app_user_id }, new AjaxOptions()

    @*{
    HttpMethod = "POST",
        LoadingElementId = "resultLoadingDiv",
        UpdateTargetId = "PrjDiv",
        OnBegin = "ShowProcessingMsg",
        OnComplete = "HideProcessingMsg",
        OnSuccess = "success"
    }, new { @class = "delete-button btn btn-danger top-button deleteBtn" })).Css("abc");*@
})
           .Css("css-classes") // Overwrites all classes with the new ones
                                 .AppendCss("table-hover") // Appends classes to the current ones
                                         .Pageable(pager =>
                                         {
                                             pager.PageSizes = new Dictionary<int, string>()
                                                                                                      {
                                                                                                      {0, "All"},
                                                                                                      {10, "10"},
                                                                                                      {20, "20"},
                                                                                                      {50, "50"},
                                                                                                      {100, "100"}
                                                                                                      };


                                             pager.ShowPageSizes = true;
                                             pager.PagesToDisplay = 10;
                                             pager.RowsPerPage = 10;
                                         })
                                                                                                                                                      .WithFilterMode(GridFilterMode.FilterRow)
                                                                                                                                                      .Empty("No data found")
                                                                                                                                                      .Filterable()
    )



        </div>

    </div>
   
</div>  
<script>
    $(document).ready(function () {
            $('#export').css("display", "block");

        </script>