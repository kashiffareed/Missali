@using Hands.Common.Common
@model Hands.ViewModels.Models.Products.ProductsModel
@{
    ViewBag.Title = "Edit Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script type="text/javascript">

    var right =
        '@(HandSession.Current.AccessList.Any(x => x.ProjectId == HandSession.Current.ProjectId && x.RoleId == HandSession.Current.RoleId && x.AccessLevelId == CommonConstant.RightLevelEnum.view.ToInt() && x.MenuId == CommonConstant.MenuList.CLMISProduct.ToInt()))';

    if (right === 'False') {
        window.location.href = '@Url.Action("Index","Default")';
    }
</script>


<style>
    .popup {
        position: fixed;
        background: #5f5f5f26;
        width: 100%;
        padding-left: 30%;
        top: 0;
        padding-top: 21%;
        height: 274%;
    }

    .m-footer {
        display: none
    }

    .titlehead {
        font-size: 22px;
        color: #676767;
        padding-top: 12px;
        padding-left: 14px;
    }
</style>

<div id="TargeDiv">
    <div class="m-content">


        <div class="col-lg-12">
            <!--begin::Portlet-->
            <div class="m-portlet">



                @using (Ajax.BeginForm("Edit", "Products",
                    new AjaxOptions
                    {
                        LoadingElementId = "resultLoadingDiv",
                        InsertionMode = InsertionMode.ReplaceWith,
                        OnBegin = "ShowProcessingMsg",
                        OnComplete = "HideProcessingMsg",
                        OnSuccess = "successEdit",
                        UpdateTargetId = "TargeDiv"

                    },
                    new { @id = "loginForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.ProductId)
                    <div class="form-horizontal" style="padding-left: 14px;">

                        <h4 class="titlehead">Edit Products</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @{
                            var regionSelectListItems = Model.Categories.Select(r => new SelectListItem { Text = r.CategoryName.ToString(), Value = r.CategoryName.ToString() }).ToList();
                        }
                        @*<div class="form-group">
                                @Html.Label("Product Category", new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(f => f.ProductCategory, regionSelectListItems, "Select", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
                            </div>*@
                        <div class="form-group">
                            @Html.Label("Product Category", new { @class = "control-label col-md-2" })
                            <div class="col-md-6">

                                @Html.DropDownListFor(x => x.ProductCategory, new List<SelectListItem>
                                    {
                                        new SelectListItem{ Text="Select", Value = "" },
                                        new SelectListItem{ Text="Contraceptive", Value = "contraceptive" }

                                    }, new { @class = "form-control" })

                            </div>
                            @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BrandName, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.BrandName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Measurement unit", new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @*@Html.TextBoxFor(model => model.MaritialStatus, new { @class = "form-control" })*@
                                @Html.DropDownListFor(x => x.MeasurementUnit, new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="Select", Value = "" },
                                    new SelectListItem{ Text="kg", Value = "kg" },
                                    new SelectListItem{ Text="liter", Value = "liter" },
                                    new SelectListItem{ Text="piece", Value = "piece" },
                                    new SelectListItem{ Text="dozen",Value = "dozen" }
                                }, new { @class = "form-control" })

                            </div>
                            @Html.ValidationMessageFor(model => model.MeasurementUnit, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group">
                                @Html.LabelFor(model => model.RP, new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.RP, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RP, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.PackSize, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.PackSize, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PackSize, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RegNo, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(model => model.RegNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RegNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6" style="padding-bottom: 16px;">
                                <input type="submit" value="Save" class="edit-button btn btn-primary top-button" />
                                <a href="~/Products/Index?class=m-scroll-top"><span class="fa fa-arrow-circle-o-left col-md-offset-2" style="font-size: 36px;    float: right;"></span></a>
                            </div>

                        </div>

                        <div id="resultLoadingDiv" hidden class="popup">

                            <img src="~/Content/Images/abc.gif" />
                        </div>
                    </div>
                }


            </div>
            <!--end::Portlet-->
        </div>

    </div>
</div>

<script type="text/javascript">


    function successEdit() {
        swal("Successful!", "Your record has been successfully updated!", "success");
    }




    function ShowProcessingMsg() {
        $('#resultLoadingDiv').removeAttr('hidden');

    }
    function HideProcessingMsg() {

        $('#resultLoadingDiv').attr('hidden', '');
    }



</script>


